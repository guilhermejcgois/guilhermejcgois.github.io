!function(n,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var t=e();for(var r in t)("object"==typeof exports?exports:n)[r]=t[r]}}(window,function(){return function(n){var e={};function t(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return n[r].call(i.exports,i,i.exports,t),i.l=!0,i.exports}return t.m=n,t.c=e,t.d=function(n,e,r){t.o(n,e)||Object.defineProperty(n,e,{configurable:!1,enumerable:!0,get:r})},t.r=function(n){Object.defineProperty(n,"__esModule",{value:!0})},t.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(e,"a",e),e},t.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},t.p="",t(t.s=20)}([function(n,e,t){"use strict";var r=Object.prototype.hasOwnProperty;function i(n,e){return Array.isArray(n)?function(n,e){for(var t,r="",o="",a=Array.isArray(e),s=0;s<n.length;s++)(t=i(n[s]))&&(a&&e[s]&&(t=d(t)),r=r+o+t,o=" ");return r}(n,e):n&&"object"==typeof n?function(n){var e="",t="";for(var i in n)i&&n[i]&&r.call(n,i)&&(e=e+t+i,t=" ");return e}(n):n||""}function o(n){if(!n)return"";if("object"==typeof n){var e="";for(var t in n)r.call(n,t)&&(e=e+t+":"+n[t]+";");return e}return n+""}function a(n,e,t,r){return!1!==e&&null!=e&&(e||"class"!==n&&"style"!==n)?!0===e?" "+(r?n:n+'="'+n+'"'):("function"==typeof e.toJSON&&(e=e.toJSON()),"string"==typeof e||(e=JSON.stringify(e),t||-1===e.indexOf('"'))?(t&&(e=d(e))," "+n+'="'+e+'"'):" "+n+"='"+e.replace(/'/g,"&#39;")+"'"):""}e.merge=function n(e,t){if(1===arguments.length){for(var r=e[0],i=1;i<e.length;i++)r=n(r,e[i]);return r}for(var a in t)if("class"===a){var s=e[a]||[];e[a]=(Array.isArray(s)?s:[s]).concat(t[a]||[])}else if("style"===a){var s=o(e[a]);s=s&&";"!==s[s.length-1]?s+";":s;var d=o(t[a]);d=d&&";"!==d[d.length-1]?d+";":d,e[a]=s+d}else e[a]=t[a];return e},e.classes=i,e.style=o,e.attr=a,e.attrs=function(n,e){var t="";for(var s in n)if(r.call(n,s)){var d=n[s];if("class"===s){d=i(d),t=a(s,d,!1,e)+t;continue}"style"===s&&(d=o(d)),t+=a(s,d,!1,e)}return t};var s=/["&<>]/;function d(n){var e=""+n,t=s.exec(e);if(!t)return n;var r,i,o,a="";for(r=t.index,i=0;r<e.length;r++){switch(e.charCodeAt(r)){case 34:o="&quot;";break;case 38:o="&amp;";break;case 60:o="&lt;";break;case 62:o="&gt;";break;default:continue}i!==r&&(a+=e.substring(i,r)),i=r+1,a+=o}return i!==r?a+e.substring(i,r):a}e.escape=d,e.rethrow=function n(e,r,i,o){if(!(e instanceof Error))throw e;if(!("undefined"==typeof window&&r||o))throw e.message+=" on line "+i,e;try{o=o||t(5).readFileSync(r,"utf8")}catch(t){n(e,null,i)}var a=3,s=o.split("\n"),d=Math.max(i-a,0),l=Math.min(s.length,i+a);var a=s.slice(d,l).map(function(n,e){var t=e+d+1;return(t==i?"  > ":"    ")+t+"| "+n}).join("\n");e.path=r;e.message=(r||"Pug")+":"+i+"\n"+a+"\n\n"+e.message;throw e}},function(n,e,t){var r,i,o={},a=(r=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===i&&(i=r.apply(this,arguments)),i}),s=function(n){var e={};return function(n){if("function"==typeof n)return n();if(void 0===e[n]){var t=function(n){return document.querySelector(n)}.call(this,n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}}(),d=null,l=0,p=[],c=t(17);function f(n,e){for(var t=0;t<n.length;t++){var r=n[t],i=o[r.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](r.parts[a]);for(;a<r.parts.length;a++)i.parts.push(x(r.parts[a],e))}else{var s=[];for(a=0;a<r.parts.length;a++)s.push(x(r.parts[a],e));o[r.id]={id:r.id,refs:1,parts:s}}}}function h(n,e){for(var t=[],r={},i=0;i<n.length;i++){var o=n[i],a=e.base?o[0]+e.base:o[0],s={css:o[1],media:o[2],sourceMap:o[3]};r[a]?r[a].parts.push(s):t.push(r[a]={id:a,parts:[s]})}return t}function u(n,e){var t=s(n.insertInto);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var r=p[p.length-1];if("top"===n.insertAt)r?r.nextSibling?t.insertBefore(e,r.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),p.push(e);else if("bottom"===n.insertAt)t.appendChild(e);else{if("object"!=typeof n.insertAt||!n.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var i=s(n.insertInto+" "+n.insertAt.before);t.insertBefore(e,i)}}function m(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n);var e=p.indexOf(n);e>=0&&p.splice(e,1)}function g(n){var e=document.createElement("style");return void 0===n.attrs.type&&(n.attrs.type="text/css"),b(e,n.attrs),u(n,e),e}function b(n,e){Object.keys(e).forEach(function(t){n.setAttribute(t,e[t])})}function x(n,e){var t,r,i,o;if(e.transform&&n.css){if(!(o=e.transform(n.css)))return function(){};n.css=o}if(e.singleton){var a=l++;t=d||(d=g(e)),r=w.bind(null,t,a,!1),i=w.bind(null,t,a,!0)}else n.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(t=function(n){var e=document.createElement("link");return void 0===n.attrs.type&&(n.attrs.type="text/css"),n.attrs.rel="stylesheet",b(e,n.attrs),u(n,e),e}(e),r=function(n,e,t){var r=t.css,i=t.sourceMap,o=void 0===e.convertToAbsoluteUrls&&i;(e.convertToAbsoluteUrls||o)&&(r=c(r));i&&(r+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(i))))+" */");var a=new Blob([r],{type:"text/css"}),s=n.href;n.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,t,e),i=function(){m(t),t.href&&URL.revokeObjectURL(t.href)}):(t=g(e),r=function(n,e){var t=e.css,r=e.media;r&&n.setAttribute("media",r);if(n.styleSheet)n.styleSheet.cssText=t;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(t))}}.bind(null,t),i=function(){m(t)});return r(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;r(n=e)}else i()}}n.exports=function(n,e){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(e=e||{}).attrs="object"==typeof e.attrs?e.attrs:{},e.singleton||"boolean"==typeof e.singleton||(e.singleton=a()),e.insertInto||(e.insertInto="head"),e.insertAt||(e.insertAt="bottom");var t=h(n,e);return f(t,e),function(n){for(var r=[],i=0;i<t.length;i++){var a=t[i];(s=o[a.id]).refs--,r.push(s)}n&&f(h(n,e),e);for(i=0;i<r.length;i++){var s;if(0===(s=r[i]).refs){for(var d=0;d<s.parts.length;d++)s.parts[d]();delete o[s.id]}}}};var v,y=(v=[],function(n,e){return v[n]=e,v.filter(Boolean).join("\n")});function w(n,e,t,r){var i=t?"":r.css;if(n.styleSheet)n.styleSheet.cssText=y(e,i);else{var o=document.createTextNode(i),a=n.childNodes;a[e]&&n.removeChild(a[e]),a.length?n.insertBefore(o,a[e]):n.appendChild(o)}}},function(n,e){n.exports=function(n){var e=[];return e.toString=function(){return this.map(function(e){var t=function(n,e){var t=n[1]||"",r=n[3];if(!r)return t;if(e&&"function"==typeof btoa){var i=(a=r,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),o=r.sources.map(function(n){return"/*# sourceURL="+r.sourceRoot+n+" */"});return[t].concat(o).concat([i]).join("\n")}var a;return[t].join("\n")}(e,n);return e[2]?"@media "+e[2]+"{"+t+"}":t}).join("")},e.i=function(n,t){"string"==typeof n&&(n=[[null,n,""]]);for(var r={},i=0;i<this.length;i++){var o=this[i][0];"number"==typeof o&&(r[o]=!0)}for(i=0;i<n.length;i++){var a=n[i];"number"==typeof a[0]&&r[a[0]]||(t&&!a[2]?a[2]=t:t&&(a[2]="("+a[2]+") and ("+t+")"),e.push(a))}},e}},function(n,e,t){var r=t(0);n.exports=function(n){var e,t="",i=[{className:"mail",link:"mailto:guilherme.gois@devgois.com"},{className:"facebook",link:"https://www.facebook.com/guilhermejcgois/"},{className:"github",link:"https://github.com/guilhermejcgois/"},{className:"twitter",link:"https://twitter.com/guilhermejcgois/"},{className:"instagram",link:"https://www.instagram.com/guilhermejcgois/"},{className:"codepen",link:"https://www.instagram.com/guilhermejcgois/"},{className:"linkedin",link:"https://www.linkedin.com/company/guilhermejcgois/"}];return t+='<footer><div class="credits">Based on a codepen by <a href="https://codepen.io/oknoblich/details/jfJmy">Oliver Knoblich</a></div><div class="social"><ul>',function(){var n=i;if("number"==typeof n.length)for(var o=0,a=n.length;o<a;o++){var s=n[o];t=t+"<li"+r.attr("class",r.classes([s.className],[!0]),!1,!0)+"><a"+r.attr("href",s.link,!0,!0)+">"+r.escape(null==(e=s.name)?"":e)+"</a></li>"}else for(var o in a=0,n)a++,s=n[o],t=t+"<li"+r.attr("class",r.classes([s.className],[!0]),!1,!0)+"><a"+r.attr("href",s.link,!0,!0)+">"+r.escape(null==(e=s.name)?"":e)+"</a></li>"}.call(this),t=t+'</ul></div></footer><div class="szene"><div class="image animate"><div class="line begin html">'+r.escape(null==(e="<HTML>")?"":e)+'</div><div class="line begin head">'+r.escape(null==(e="<HEAD>")?"":e)+'</div><div class="line title">'+r.escape(null==(e="<TITLE>DEVGOIS</TITLE>")?"":e)+'</div><div class="line end head">'+r.escape(null==(e="</HEAD>")?"":e)+'</div><div class="line begin body">'+r.escape(null==(e="<BODY>")?"":e)+'</div><div class="line body text">'+r.escape(null==(e="Building...")?"":e)+'</div><div class="line end body">'+r.escape(null==(e="</BODY>")?"":e)+'</div><div class="line end html">'+r.escape(null==(e="</HTML>")?"":e)+'</div></div><div class="people head"><div class="eyes animate"></div></div><div class="people body"><div class="right-arm wave"><div class="sleeve"></div></div></div><div class="table"></div><div class="laptop"></div><div class="mouse"></div><div class="notes"></div><div class="lamp"><div class="top"></div></div><div class="headphones"></div><div class="trash"><div class="paper p1"></div><div class="paper p2"></div><div class="paper p3"></div><div class="paper p4"></div></div>\x3c!--<script src="js/under-construction.js"><\/script>--\x3e</div>'}},function(n,e,t){t(0);n.exports=function(n){var e="";return e+='<head><meta charSet="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"><title>DEVGOIS</title><meta name="description" content=""><meta name="viewport" content="width=device-width, initial-scale=1"><link rel="apple-touch-icon" href="apple-touch-icon.png"><link rel="stylesheet" href="styles/normalize.min.css"><link rel="stylesheet" href="styles/main.css"><script src="js/vendor/modernizr-2.8.3-respond-1.4.2.min.js"><\/script></head>'}},function(n,e){},function(n,e,t){t(0);n.exports=function(n){var e,r="";return r=r+'<!DOCTYPE html>\x3c!--[if lt IE 7]><html class="no-js lt-ie9 lt-ie8 lt-ie7" lang=""> <![endif]--\x3e\n\x3c!--[if IE 7]><html class="no-js lt-ie9 lt-ie8" lang=""> <![endif]--\x3e\n\x3c!--[if IE 8]><html class="no-js lt-ie9" lang=""> <![endif]--\x3e\n\x3c!--[if gt IE 8]>\x3c!--\x3e<html class="no-js" lang="pt-br">\x3c!--<![endif]--\x3e'+(null==(e=t(4).call(this,n))?"":e)+'<body>\x3c!--[if lt IE 8]><p class="browserupgrade">You are using an <strong>outdated</strong> browser. Please <a href="http://browsehappy.com/">upgrade your browser</a> to improve your experience.</p><![endif]--\x3e'+(null==(e=t(3).call(this,n))?"":e)+"\x3c!--<script src=\"js/main.js\"><\/script>\n\nGoogle Analytics: change UA-XXXXX-X to be your site's ID.\n<script>\n\t(function(b, o, i, l, e, r) {\n\t\tb.GoogleAnalyticsObject = l;\n\t\tb[l] || (b[l] =\n\t\t\tfunction() {\n\t\t\t\t(b[l].q = b[l].q || []).push(arguments)\n\t\t\t});\n\t\tb[l].l = +new Date;\n\t\te = o.createElement(i);\n\t\tr = o.getElementsByTagName(i)[0];\n\t\te.src = '//www.google-analytics.com/analytics.js';\n\t\tr.parentNode.insertBefore(e, r)\n\t}(window, document, 'script', 'ga'));\n\tga('create', 'UA-XXXXX-X', 'auto');\n\tga('send', 'pageview');\n<\/script>--\x3e</body>"}},function(n,e,t){n.exports=t.p+"6f12cc52871336f3a69f09ed3fe88d7d.svg"},function(n,e,t){n.exports=t.p+"68bd17538bb94d20e8f167d4abc12e86.svg"},function(n,e,t){n.exports=t.p+"89fcf6c60f9bdc49aa25bbe997642371.svg"},function(n,e,t){n.exports=t.p+"89da7093bd79c4dba70a4db74c7610b0.svg"},function(n,e,t){n.exports=t.p+"e9eed4fa706aae9ffcda3999d9097b39.svg"},function(n,e,t){n.exports=t.p+"283cd64946778ee2bbf0e18f653efe39.svg"},function(n,e,t){n.exports=t.p+"8095c7cd3b09b6c65230b3b9d20a0e7d.svg"},function(n,e){n.exports=function(n){return"string"!=typeof n?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),/["'() \t\n]/.test(n)?'"'+n.replace(/"/g,'\\"').replace(/\n/g,"\\n")+'"':n)}},function(n,e,t){var r=t(14);(e=n.exports=t(2)(!1)).push([n.i,"@import url(https://fonts.googleapis.com/css?family=Roboto+Mono:400,100,500,300italic,500italic,700italic,900,300);",""]),e.push([n.i,"* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box; }\n\n*:before, *:after {\n  content: '';\n  display: block;\n  position: absolute;\n  box-sizing: border-box; }\n\nhtml, body {\n  height: 100vh; }\n\nbody {\n  background: #d93; }\n\n.szene {\n  position: absolute;\n  left: 50%;\n  bottom: 40px;\n  width: 800px;\n  height: 400px;\n  margin-left: -400px;\n  overflow: hidden; }\n\n.szene div {\n  position: absolute; }\n\n.image {\n  top: 30px;\n  left: 100px;\n  width: 460px;\n  height: 200px;\n  font-family: 'Roboto Mono', monospace;\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.4rem;\n  color: #888;\n  border: 8px solid #444;\n  background: #eee;\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-template-rows: repeat(8, 1fr); }\n\n.image:not(.animate) .line {\n  display: none; }\n\n.line {\n  grid-column: 1;\n  margin-left: 8px; }\n\n.line.html {\n  padding-left: 0; }\n\n.line.head {\n  padding-left: 11px; }\n\n.line.title {\n  padding-left: 22px; }\n\n.line.body {\n  padding-left: 11px; }\n\n.line.body.text {\n  padding-left: 22px; }\n\n@keyframes caret {\n  from {\n    border-right: transparent; }\n  to {\n    border-right: 1px solid rgba(0, 0, 0, 0.75); } }\n\n.animate-caret {\n  animation: caret 1000ms infinite; }\n\n.animate .line.begin.html {\n  grid-row: 1;\n  overflow: hidden;\n  animation: type-html 4s steps(6) 0.66667s 1 normal both, caret 0.66667s steps(2) 0.66667s 6; }\n\n@keyframes type-html {\n  from {\n    width: 0; }\n  to {\n    width: 66px; } }\n\n.animate .line.begin.head {\n  grid-row: 2;\n  overflow: hidden;\n  animation: type-head 4s steps(7) 5.33333s 1 normal both, caret 0.66667s steps(2) 5.33333s 12; }\n\n@keyframes type-head {\n  from {\n    width: 0; }\n  to {\n    width: 77px; } }\n\n.animate .line.title {\n  grid-row: 3;\n  overflow: hidden;\n  animation: type-title 14.66667s steps(24) 13s 1 normal both, caret 0.66667s steps(2) 13s 23; }\n\n@keyframes type-title {\n  from {\n    width: 0; }\n  to {\n    width: 264px; } }\n\n.animate .line.end.head {\n  grid-row: 4;\n  overflow: hidden;\n  animation: type-head-end 4.66667s steps(8) 28.33333s 1 normal both, caret 0.66667s steps(2) 28.33333s 8; }\n\n@keyframes type-head-end {\n  from {\n    width: 0; }\n  to {\n    width: 88px; } }\n\n.animate .line.begin.body {\n  grid-row: 5;\n  overflow: hidden;\n  animation: type-body 4s steps(7) 33.66667s 1 normal both, caret 0.66667s steps(2) 33.66667s 7; }\n\n@keyframes type-body {\n  from {\n    width: 0; }\n  to {\n    width: 77px; } }\n\n.animate .line.body.text {\n  grid-row: 6;\n  overflow: hidden;\n  animation: type-body-text 7.33333s steps(13) 38.33333s 1 normal both, caret 0.66667s steps(2) 38.33333s 12; }\n\n@keyframes type-body-text {\n  from {\n    width: 0; }\n  to {\n    width: 143px; } }\n\n.animate .line.end.body {\n  grid-row: 7;\n  overflow: hidden;\n  animation: type-body-end 4.66667s steps(8) 46.33333s 1 normal both, caret 0.66667s steps(2) 46.33333s 8; }\n\n@keyframes type-body-end {\n  from {\n    width: 0; }\n  to {\n    width: 88px; } }\n\n.animate .line.end.html {\n  grid-row: 8;\n  overflow: hidden;\n  animation: type-html-end 4s steps(8) 51.66667s 1 normal both, caret 0.66667s steps(2) 51.66667s 8; }\n\n@keyframes type-html-end {\n  from {\n    width: 0; }\n  to {\n    width: 88px; } }\n\n.people.head {\n  bottom: 90px;\n  left: 575px;\n  width: 85px;\n  height: 85px;\n  border-radius: 50%;\n  background: #eee; }\n\n.people.head .eyes {\n  top: 58px;\n  left: 30px;\n  width: 6px;\n  height: 6px;\n  border-radius: 50%;\n  background: #444;\n  box-shadow: 20px 0 0 #444; }\n\n.eyes.animate {\n  animation: 10s eyes ease 6s; }\n\n@keyframes eyes {\n  0% {\n    transform: translate3d(0, 0, 0); }\n  10% {\n    transform: translate3d(0, -18px, 0); }\n  20% {\n    transform: translate3d(0, -19px, 0); }\n  30% {\n    transform: translate3d(0, 0, 0); }\n  50% {\n    transform: translate3d(0, -19px, 0); }\n  70% {\n    transform: translate3d(0, -19px, 0); }\n  100% {\n    transform: translate3d(0, 0, 0); } }\n\n.people.body {\n  bottom: -20px;\n  left: 578px;\n  width: 82px;\n  height: 110px;\n  border-radius: 0 0 50% 50%;\n  background: #045490; }\n\n.people.body .right-arm {\n  left: 80px;\n  height: 10px;\n  background: #eee;\n  box-shadow: 20px 0 0 #eee;\n  z-index: 1; }\n\n.people.body .right-arm .sleeve {\n  height: 100%;\n  width: 100%;\n  background: #3394DD; }\n\n.wave {\n  transform-origin: left center;\n  animation: 3s wave ease 11s; }\n\n@keyframes wave {\n  0% {\n    width: 0%;\n    transform: rotate(0deg); }\n  10% {\n    width: 100%;\n    transform: rotate(-45deg); }\n  30% {\n    width: 100%;\n    transform: rotate(-90deg); }\n  50% {\n    width: 100%;\n    transform: rotate(-45deg); }\n  70% {\n    width: 100%;\n    transform: rotate(-90deg); }\n  90% {\n    width: 100%;\n    transform: rotate(-45deg); }\n  100% {\n    width: 0%;\n    transform: rotate(0deg); } }\n\n.table {\n  bottom: 15px;\n  left: 280px;\n  width: 500px;\n  height: 15px;\n  background: #444; }\n\n.table:before,\n.table:after {\n  top: 15px;\n  width: 10px;\n  height: 20px;\n  border-top: 3px solid #aaa;\n  background: #eee; }\n\n.table:before {\n  left: 20px; }\n\n.table:after {\n  right: 20px; }\n\n.laptop {\n  bottom: 35px;\n  left: 550px;\n  width: 140px;\n  height: 70px;\n  border-radius: 2px 2px 0 0;\n  background: #ddd;\n  z-index: 2; }\n\n.laptop:before {\n  top: 50%;\n  left: 50%;\n  width: 18px;\n  height: 18px;\n  margin: -9px 0 0 -9px;\n  border-radius: 50%;\n  background: #fff; }\n\n.laptop:after {\n  top: 70px;\n  left: -5px;\n  width: 150px;\n  height: 5px;\n  border-radius: 2px 2px 0 0;\n  background: #888; }\n\n.mouse {\n  bottom: 30px;\n  left: 510px;\n  width: 20px;\n  height: 6px;\n  border-bottom: 2px solid #888;\n  border-radius: 25%;\n  background: #ddd; }\n\n.notes {\n  bottom: 30px;\n  left: 705px;\n  width: 60px;\n  height: 12px;\n  background: #fff;\n  border: 4px solid #222;\n  border-radius: 4px;\n  border-left: 0; }\n\n.lamp {\n  bottom: 30px;\n  left: 410px;\n  width: 40px;\n  height: 20px;\n  border-radius: 80px 80px 0 0;\n  background: #eee; }\n\n.lamp:before,\n.lamp:after {\n  z-index: -1;\n  width: 6px;\n  height: 80px;\n  background: #ccc; }\n\n.lamp:before {\n  top: -70px;\n  left: 8px;\n  transform: rotate(-15deg); }\n\n.lamp:after {\n  top: -108px;\n  left: 30px;\n  transform: rotate(75deg); }\n\n.lamp .top {\n  top: -75px;\n  left: 45px;\n  width: 50px;\n  height: 25px;\n  border-radius: 100px 100px 0 0;\n  background: #eee;\n  transform: rotate(-15deg); }\n\n.headphones {\n  bottom: 85px;\n  left: 563px;\n  width: 110px;\n  height: 100px;\n  border-radius: 50%;\n  border-top: 10px solid #444; }\n\n.headphones:before,\n.headphones:after {\n  width: 20px;\n  height: 40px;\n  top: 20px;\n  background: #FFBB54; }\n\n.headphones:before {\n  left: -8px;\n  border-radius: 80px 0 0 80px;\n  border-right: 3px solid #444; }\n\n.headphones:after {\n  right: -7px;\n  border-radius: 0 80px 80px 0;\n  border-left: 3px solid #444; }\n\n.trash {\n  bottom: 10px;\n  left: 20px;\n  width: 100px;\n  height: 8px;\n  background: #444; }\n\n.trash:after {\n  top: 8px;\n  left: 3px;\n  width: 94px;\n  height: 25px;\n  border-radius: 0 0 50px 50px;\n  background: #555; }\n\n.trash .paper {\n  z-index: -1;\n  width: 25px;\n  height: 50px;\n  border: 2px solid #555;\n  background: #ddd; }\n\n.trash .paper.p1 {\n  top: -15px;\n  left: 10px;\n  transform: rotate(-20deg); }\n\n.trash .paper.p2 {\n  top: -12px;\n  left: 30px;\n  transform: rotate(-40deg); }\n\n.trash .paper.p3 {\n  top: -15px;\n  left: 60px;\n  transform: rotate(10deg); }\n\n.trash .paper.p4 {\n  top: -12px;\n  left: 30px;\n  transform: rotate(65deg); }\n\nfooter {\n  background: #4d4d4d;\n  bottom: 0;\n  color: #fff;\n  display: flex;\n  flex-direction: row;\n  font-family: 'Roboto Mono', monospace;\n  justify-content: space-between;\n  height: 40px;\n  left: 0;\n  margin-top: -40px;\n  padding: 0 10px;\n  position: absolute;\n  width: 100vw; }\n  footer .credits {\n    line-height: 1.5;\n    padding-top: 3px; }\n  footer .credits a {\n    color: #009AEE; }\n  footer .social ul {\n    display: grid;\n    grid-column-gap: 12px;\n    grid-template-columns: repeat(7, 1fr);\n    grid-template-rows: 1fr; }\n\n.social ul {\n  height: 100%;\n  list-style: none; }\n  .social ul li {\n    display: flex;\n    flex-direction: column;\n    justify-content: center; }\n  .social ul a {\n    background-repeat: no-repeat;\n    background-size: contain;\n    display: block;\n    height: 20px;\n    width: 20px; }\n\n.codepen a {\n  background-image: url("+r(t(13))+"); }\n\n.facebook a {\n  background-image: url("+r(t(12))+"); }\n\n.github a {\n  background-image: url("+r(t(11))+"); }\n\n.instagram a {\n  background-image: url("+r(t(10))+"); }\n\n.linkedin a {\n  background-image: url("+r(t(9))+"); }\n\n.mail a {\n  background-image: url("+r(t(8))+"); }\n\n.twitter a {\n  background-image: url("+r(t(7))+"); }\n",""])},function(n,e,t){var r=t(15);"string"==typeof r&&(r=[[n.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(1)(r,i);r.locals&&(n.exports=r.locals)},function(n,e){n.exports=function(n){var e="undefined"!=typeof window&&window.location;if(!e)throw new Error("fixUrls requires window.location");if(!n||"string"!=typeof n)return n;var t=e.protocol+"//"+e.host,r=t+e.pathname.replace(/\/[^\/]*$/,"/");return n.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,function(n,e){var i,o=e.trim().replace(/^"(.*)"$/,function(n,e){return e}).replace(/^'(.*)'$/,function(n,e){return e});return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(o)?n:(i=0===o.indexOf("//")?o:0===o.indexOf("/")?t+o:r+o.replace(/^\.\//,""),"url("+JSON.stringify(i)+")")})}},function(n,e,t){(n.exports=t(2)(!1)).push([n.i,'/*! HTML5 Boilerplate v5.0 | MIT License | http://h5bp.com/ */\nhtml {\n  color: #222;\n  font-size: 1em;\n  line-height: 1.4; }\n\n::-moz-selection {\n  background: #b3d4fc;\n  text-shadow: none; }\n\n::selection {\n  background: #b3d4fc;\n  text-shadow: none; }\n\nhr {\n  display: block;\n  height: 1px;\n  border: 0;\n  border-top: 1px solid #ccc;\n  margin: 1em 0;\n  padding: 0; }\n\naudio, canvas, iframe, img, svg, video {\n  vertical-align: middle; }\n\nfieldset {\n  border: 0;\n  margin: 0;\n  padding: 0; }\n\ntextarea {\n  resize: vertical; }\n\n.browserupgrade {\n  margin: 0.2em 0;\n  background: #ccc;\n  color: #000;\n  padding: 0.2em 0; }\n\n/* ===== Initializr Styles ==================================================\n   Author: Jonathan Verrecchia - verekia.com/initializr/responsive-template\n   ========================================================================== */\nbody {\n  font: 16px/26px Helvetica, Helvetica Neue, Arial; }\n\n.wrapper {\n  width: 90%;\n  margin: 0 5%; }\n\n/* ===================\n    ALL: Orange Theme\n   =================== */\n.header-container {\n  border-bottom: 20px solid #e44d26; }\n\n.footer-container, .main aside {\n  border-top: 20px solid #e44d26; }\n\n.header-container, .footer-container, .main aside {\n  background: #f16529; }\n\n/* ==============\n    MOBILE: Menu\n   ============== */\nnav ul {\n  margin: 0;\n  padding: 0;\n  list-style-type: none; }\n\nnav a {\n  display: block;\n  margin-bottom: 10px;\n  padding: 15px 0;\n  text-align: center;\n  text-decoration: none;\n  font-weight: bold;\n  color: white;\n  background: #e44d26; }\n\nnav a:hover, nav a:visited {\n  color: white; }\n\nnav a:hover {\n  text-decoration: underline; }\n\n/* ==============\n    MOBILE: Main\n   ============== */\n.main {\n  padding: 30px 0; }\n\n.main article h1 {\n  font-size: 2em; }\n\n.main aside {\n  color: white;\n  padding: 0px 5% 10px; }\n\n.footer-container footer {\n  color: white;\n  padding: 20px 0; }\n\n/* ===============\n    ALL: IE Fixes\n   =============== */\n.ie7 .title {\n  padding-top: 20px; }\n\n/* ==========================================================================\n   Author\'s custom styles\n   ========================================================================== */\n/* ==========================================================================\n   Media Queries\n   ========================================================================== */\n@media only screen and (min-width: 480px) {\n  /* ====================\n    INTERMEDIATE: Menu\n   ==================== */\n  nav a {\n    float: left;\n    width: 27%;\n    margin: 0 1.7%;\n    padding: 25px 2%;\n    margin-bottom: 0; }\n  nav li:first-child a {\n    margin-left: 0; }\n  nav li:last-child a {\n    margin-right: 0; }\n  /* ========================\n    INTERMEDIATE: IE Fixes\n   ======================== */\n  nav ul li {\n    display: inline; }\n  .oldie nav a {\n    margin: 0 0.7%; } }\n\n@media only screen and (min-width: 768px) {\n  /* ====================\n    WIDE: CSS3 Effects\n   ==================== */\n  .header-container, .main aside {\n    -webkit-box-shadow: 0 5px 10px #aaa;\n    -moz-box-shadow: 0 5px 10px #aaa;\n    box-shadow: 0 5px 10px #aaa; }\n  /* ============\n    WIDE: Menu\n   ============ */\n  .title {\n    float: left; }\n  nav {\n    float: right;\n    width: 38%; }\n  /* ============\n    WIDE: Main\n   ============ */\n  .main article {\n    float: left;\n    width: 57%; }\n  .main aside {\n    float: right;\n    width: 28%; } }\n\n@media only screen and (min-width: 1140px) {\n  /* ===============\n    Maximal Width\n   =============== */\n  .wrapper {\n    width: 1026px;\n    /* 1140px - 10% for margins */\n    margin: 0 auto; } }\n\n/* ==========================================================================\n   Helper classes\n   ========================================================================== */\n.hidden {\n  display: none !important;\n  visibility: hidden; }\n\n.visuallyhidden {\n  border: 0;\n  clip: rect(0 0 0 0);\n  height: 1px;\n  margin: -1px;\n  overflow: hidden;\n  padding: 0;\n  position: absolute;\n  width: 1px; }\n\n.visuallyhidden.focusable:active, .visuallyhidden.focusable:focus {\n  clip: auto;\n  height: auto;\n  margin: 0;\n  overflow: visible;\n  position: static;\n  width: auto; }\n\n.invisible {\n  visibility: hidden; }\n\n.clearfix:before, .clearfix:after {\n  content: " ";\n  display: table; }\n\n.clearfix:after {\n  clear: both; }\n\n.clearfix {\n  *zoom: 1; }\n\n/* ==========================================================================\n   Print styles\n   ========================================================================== */\n@media print {\n  *, *:before, *:after {\n    background: transparent !important;\n    color: #000 !important;\n    box-shadow: none !important;\n    text-shadow: none !important; }\n  a, a:visited {\n    text-decoration: underline; }\n  a[href]:after {\n    content: " (" attr(href) ")"; }\n  abbr[title]:after {\n    content: " (" attr(title) ")"; }\n  a[href^="#"]:after, a[href^="javascript:"]:after {\n    content: ""; }\n  pre, blockquote {\n    border: 1px solid #999;\n    page-break-inside: avoid; }\n  thead {\n    display: table-header-group; }\n  tr, img {\n    page-break-inside: avoid; }\n  img {\n    max-width: 100% !important; }\n  p, h2, h3 {\n    orphans: 3;\n    widows: 3; }\n  h2, h3 {\n    page-break-after: avoid; } }\n',""])},function(n,e,t){var r=t(18);"string"==typeof r&&(r=[[n.i,r,""]]);var i={hmr:!0,transform:void 0,insertInto:void 0};t(1)(r,i);r.locals&&(n.exports=r.locals)},function(n,e,t){"use strict";t.r(e);t(19),t(16);document=t(6)}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay91bml2ZXJzYWxNb2R1bGVEZWZpbml0aW9uIiwid2VicGFjazovLy93ZWJwYWNrL2Jvb3RzdHJhcCIsIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvcHVnLXJ1bnRpbWUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvdGVtcGxhdGVzL3VuZGVyLWNvbnN0cnVjdGlvbi5wdWciLCJ3ZWJwYWNrOi8vLy4vc3JjL3RlbXBsYXRlcy9oZWFkLnB1ZyIsIndlYnBhY2s6Ly8vLi9zcmMvaW5kZXgucHVnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc29jaWFsL3R3aXR0ZXIuc3ZnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc29jaWFsL21haWwuc3ZnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc29jaWFsL2xpbmtlZGluLnN2ZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL3NvY2lhbC9pbnN0YWdyYW0uc3ZnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc29jaWFsL2dpdGh1Yi5zdmciLCJ3ZWJwYWNrOi8vLy4vc3JjL2Fzc2V0cy9zb2NpYWwvZmFjZWJvb2suc3ZnIiwid2VicGFjazovLy8uL3NyYy9hc3NldHMvc29jaWFsL2NvZGVwZW4uc3ZnIiwid2VicGFjazovLy8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi91cmwvZXNjYXBlLmpzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvX3VuZGVyLWNvbnN0cnVjdGlvbi5zY3NzIiwid2VicGFjazovLy8uL3NyYy9zdHlsZXMvX3VuZGVyLWNvbnN0cnVjdGlvbi5zY3NzP2QwMDkiLCJ3ZWJwYWNrOi8vLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvdXJscy5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc3R5bGVzL21haW4uc2Nzcz8zMmQzIiwid2VicGFjazovLy8uL3NyYy9pbmRleC5qcyJdLCJuYW1lcyI6WyJyb290IiwiZmFjdG9yeSIsImV4cG9ydHMiLCJtb2R1bGUiLCJkZWZpbmUiLCJhbWQiLCJhIiwiaSIsIndpbmRvdyIsImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJsIiwibW9kdWxlcyIsImNhbGwiLCJtIiwiYyIsImQiLCJuYW1lIiwiZ2V0dGVyIiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwiZW51bWVyYWJsZSIsImdldCIsInIiLCJ2YWx1ZSIsIm4iLCJfX2VzTW9kdWxlIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwicHVnX2hhc19vd25fcHJvcGVydHkiLCJwdWdfY2xhc3NlcyIsInZhbCIsImVzY2FwaW5nIiwiQXJyYXkiLCJpc0FycmF5IiwiY2xhc3NOYW1lIiwiY2xhc3NTdHJpbmciLCJwYWRkaW5nIiwiZXNjYXBlRW5hYmxlZCIsImxlbmd0aCIsInB1Z19lc2NhcGUiLCJwdWdfY2xhc3Nlc19hcnJheSIsImtleSIsInB1Z19jbGFzc2VzX29iamVjdCIsInB1Z19zdHlsZSIsIm91dCIsInN0eWxlIiwicHVnX2F0dHIiLCJlc2NhcGVkIiwidGVyc2UiLCJ0b0pTT04iLCJKU09OIiwic3RyaW5naWZ5IiwiaW5kZXhPZiIsInJlcGxhY2UiLCJtZXJnZSIsInB1Z19tZXJnZSIsImIiLCJhcmd1bWVudHMiLCJhdHRycyIsInZhbEEiLCJjb25jYXQiLCJ2YWxCIiwiY2xhc3NlcyIsImF0dHIiLCJvYmoiLCJwdWdfbWF0Y2hfaHRtbCIsIl9odG1sIiwiaHRtbCIsInJlZ2V4UmVzdWx0IiwiZXhlYyIsImxhc3RJbmRleCIsImVzY2FwZSIsInJlc3VsdCIsImluZGV4IiwiY2hhckNvZGVBdCIsInN1YnN0cmluZyIsInJldGhyb3ciLCJwdWdfcmV0aHJvdyIsImVyciIsImZpbGVuYW1lIiwibGluZW5vIiwic3RyIiwiRXJyb3IiLCJtZXNzYWdlIiwicmVhZEZpbGVTeW5jIiwiZXgiLCJjb250ZXh0IiwibGluZXMiLCJzcGxpdCIsInN0YXJ0IiwiTWF0aCIsIm1heCIsImVuZCIsIm1pbiIsInNsaWNlIiwibWFwIiwibGluZSIsImN1cnIiLCJqb2luIiwicGF0aCIsImZuIiwibWVtbyIsInN0eWxlc0luRG9tIiwiaXNPbGRJRSIsImRvY3VtZW50IiwiYWxsIiwiYXRvYiIsImFwcGx5IiwidGhpcyIsImdldEVsZW1lbnQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsInF1ZXJ5U2VsZWN0b3IiLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwic2luZ2xldG9uIiwic2luZ2xldG9uQ291bnRlciIsInN0eWxlc0luc2VydGVkQXRUb3AiLCJmaXhVcmxzIiwiYWRkU3R5bGVzVG9Eb20iLCJzdHlsZXMiLCJvcHRpb25zIiwiaXRlbSIsImRvbVN0eWxlIiwiaWQiLCJyZWZzIiwiaiIsInBhcnRzIiwicHVzaCIsImFkZFN0eWxlIiwibGlzdFRvU3R5bGVzIiwibGlzdCIsIm5ld1N0eWxlcyIsImJhc2UiLCJwYXJ0IiwiY3NzIiwibWVkaWEiLCJzb3VyY2VNYXAiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJpbnNlcnRJbnRvIiwibGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AiLCJpbnNlcnRBdCIsIm5leHRTaWJsaW5nIiwiaW5zZXJ0QmVmb3JlIiwiYXBwZW5kQ2hpbGQiLCJmaXJzdENoaWxkIiwiYmVmb3JlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwiaWR4Iiwic3BsaWNlIiwiY3JlYXRlU3R5bGVFbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInVuZGVmaW5lZCIsInR5cGUiLCJhZGRBdHRycyIsImVsIiwia2V5cyIsImZvckVhY2giLCJzZXRBdHRyaWJ1dGUiLCJ1cGRhdGUiLCJyZW1vdmUiLCJ0cmFuc2Zvcm0iLCJzdHlsZUluZGV4IiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsImJpbmQiLCJVUkwiLCJjcmVhdGVPYmplY3RVUkwiLCJyZXZva2VPYmplY3RVUkwiLCJCbG9iIiwiYnRvYSIsImxpbmsiLCJyZWwiLCJjcmVhdGVMaW5rRWxlbWVudCIsImF1dG9GaXhVcmxzIiwiY29udmVydFRvQWJzb2x1dGVVcmxzIiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJibG9iIiwib2xkU3JjIiwiaHJlZiIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3JlYXRlVGV4dE5vZGUiLCJuZXdPYmoiLCJERUJVRyIsIm5ld0xpc3QiLCJtYXlSZW1vdmUiLCJ0ZXh0U3RvcmUiLCJyZXBsYWNlVGV4dCIsInJlcGxhY2VtZW50IiwiZmlsdGVyIiwiQm9vbGVhbiIsImNzc05vZGUiLCJjaGlsZE5vZGVzIiwidXNlU291cmNlTWFwIiwidG9TdHJpbmciLCJjb250ZW50IiwiY3NzTWFwcGluZyIsInNvdXJjZU1hcHBpbmciLCJzb3VyY2VVUkxzIiwic291cmNlcyIsInNvdXJjZSIsInNvdXJjZVJvb3QiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibWVkaWFRdWVyeSIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJwdWciLCJsb2NhbHMiLCJwdWdfaW50ZXJwIiwicHVnX2h0bWwiLCJzb2NpYWwiLCIkJG9iaiIsInB1Z19pbmRleDAiLCIkJGwiLCJ1cmwiLCJ0ZXN0IiwiaG1yIiwibG9jYXRpb24iLCJiYXNlVXJsIiwicHJvdG9jb2wiLCJob3N0IiwiY3VycmVudERpciIsInBhdGhuYW1lIiwiZnVsbE1hdGNoIiwib3JpZ1VybCIsIm5ld1VybCIsInVucXVvdGVkT3JpZ1VybCIsInRyaW0iLCIkMSJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBQUEsRUFBQUMs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QUFBOE0sRUFBQVcsdUJDSEF4TixFQUFBRCxRQUFBLFNBQUErSSxHQUVBLElBQUFvRixFQUFBLG9CQUFBN04sZUFBQTZOLFNBRUEsSUFBQUEsRUFDQSxVQUFBM0ksTUFBQSxvQ0FJQSxJQUFBdUQsR0FBQSxpQkFBQUEsRUFDQSxPQUFBQSxFQUdBLElBQUFxRixFQUFBRCxFQUFBRSxTQUFBLEtBQUFGLEVBQUFHLEtBQ0FDLEVBQUFILEVBQUFELEVBQUFLLFNBQUE3SyxRQUFBLGlCQTJEQSxPQS9CQW9GLEVBQUFwRixRQUFBLCtEQUFBOEssRUFBQUMsR0FFQSxJQVdBQyxFQVhBQyxFQUFBRixFQUNBRyxPQUNBbEwsUUFBQSxvQkFBQXpDLEVBQUE0TixHQUF3QyxPQUFBQSxJQUN4Q25MLFFBQUEsb0JBQUF6QyxFQUFBNE4sR0FBd0MsT0FBQUEsSUFHeEMsMERBQUFiLEtBQUFXLEdBQ0FILEdBUUFFLEVBRkEsSUFBQUMsRUFBQWxMLFFBQUEsTUFFQWtMLEVBQ0csSUFBQUEsRUFBQWxMLFFBQUEsS0FFSDBLLEVBQUFRLEVBR0FMLEVBQUFLLEVBQUFqTCxRQUFBLFlBSUEsT0FBQUgsS0FBQUMsVUFBQWtMLEdBQUEsMEJDbkZBMU8sRUFBQUQsUUFBQVEsRUFBQSxFQUFBQSxFQUFBLElBS0FnSSxNQUFBdkksRUFBQUksRUFBQSxtMUtBQXUzSyxzQkNKdjNLLElBQUF5TSxFQUFBdE0sRUFBQSxJQUVBLGlCQUFBc00sUUFBQTdNLEVBQUFJLEVBQUF5TSxFQUFBLE1BT0EsSUFBQTdFLEdBQWVpRyxLQUFBLEVBRWZ2RCxlQVBBQSxFQVFBeEIsZ0JBQUFlLEdBRUExSixFQUFBLEVBQUFBLENBQUFzTSxFQUFBN0UsR0FFQTZFLEVBQUFXLFNBQUF4TixFQUFBRCxRQUFBOE0sRUFBQVcseURDZEEzRyxTQUFBdEcsRUFBQSIsImZpbGUiOiJidW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gd2VicGFja1VuaXZlcnNhbE1vZHVsZURlZmluaXRpb24ocm9vdCwgZmFjdG9yeSkge1xuXHRpZih0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcgJiYgdHlwZW9mIG1vZHVsZSA9PT0gJ29iamVjdCcpXG5cdFx0bW9kdWxlLmV4cG9ydHMgPSBmYWN0b3J5KCk7XG5cdGVsc2UgaWYodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKVxuXHRcdGRlZmluZShbXSwgZmFjdG9yeSk7XG5cdGVsc2Uge1xuXHRcdHZhciBhID0gZmFjdG9yeSgpO1xuXHRcdGZvcih2YXIgaSBpbiBhKSAodHlwZW9mIGV4cG9ydHMgPT09ICdvYmplY3QnID8gZXhwb3J0cyA6IHJvb3QpW2ldID0gYVtpXTtcblx0fVxufSkod2luZG93LCBmdW5jdGlvbigpIHtcbnJldHVybiAiLCIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHtcbiBcdFx0XHRcdGNvbmZpZ3VyYWJsZTogZmFsc2UsXG4gXHRcdFx0XHRlbnVtZXJhYmxlOiB0cnVlLFxuIFx0XHRcdFx0Z2V0OiBnZXR0ZXJcbiBcdFx0XHR9KTtcbiBcdFx0fVxuIFx0fTtcblxuIFx0Ly8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5yID0gZnVuY3Rpb24oZXhwb3J0cykge1xuIFx0XHRPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgJ19fZXNNb2R1bGUnLCB7IHZhbHVlOiB0cnVlIH0pO1xuIFx0fTtcblxuIFx0Ly8gZ2V0RGVmYXVsdEV4cG9ydCBmdW5jdGlvbiBmb3IgY29tcGF0aWJpbGl0eSB3aXRoIG5vbi1oYXJtb255IG1vZHVsZXNcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubiA9IGZ1bmN0aW9uKG1vZHVsZSkge1xuIFx0XHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cbiBcdFx0XHRmdW5jdGlvbiBnZXREZWZhdWx0KCkgeyByZXR1cm4gbW9kdWxlWydkZWZhdWx0J107IH0gOlxuIFx0XHRcdGZ1bmN0aW9uIGdldE1vZHVsZUV4cG9ydHMoKSB7IHJldHVybiBtb2R1bGU7IH07XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18uZChnZXR0ZXIsICdhJywgZ2V0dGVyKTtcbiBcdFx0cmV0dXJuIGdldHRlcjtcbiBcdH07XG5cbiBcdC8vIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbFxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5vID0gZnVuY3Rpb24ob2JqZWN0LCBwcm9wZXJ0eSkgeyByZXR1cm4gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iamVjdCwgcHJvcGVydHkpOyB9O1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuXG4gXHQvLyBMb2FkIGVudHJ5IG1vZHVsZSBhbmQgcmV0dXJuIGV4cG9ydHNcbiBcdHJldHVybiBfX3dlYnBhY2tfcmVxdWlyZV9fKF9fd2VicGFja19yZXF1aXJlX18ucyA9IDIwKTtcbiIsIid1c2Ugc3RyaWN0JztcblxudmFyIHB1Z19oYXNfb3duX3Byb3BlcnR5ID0gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtcblxuLyoqXG4gKiBNZXJnZSB0d28gYXR0cmlidXRlIG9iamVjdHMgZ2l2aW5nIHByZWNlZGVuY2VcbiAqIHRvIHZhbHVlcyBpbiBvYmplY3QgYGJgLiBDbGFzc2VzIGFyZSBzcGVjaWFsLWNhc2VkXG4gKiBhbGxvd2luZyBmb3IgYXJyYXlzIGFuZCBtZXJnaW5nL2pvaW5pbmcgYXBwcm9wcmlhdGVseVxuICogcmVzdWx0aW5nIGluIGEgc3RyaW5nLlxuICpcbiAqIEBwYXJhbSB7T2JqZWN0fSBhXG4gKiBAcGFyYW0ge09iamVjdH0gYlxuICogQHJldHVybiB7T2JqZWN0fSBhXG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG5leHBvcnRzLm1lcmdlID0gcHVnX21lcmdlO1xuZnVuY3Rpb24gcHVnX21lcmdlKGEsIGIpIHtcbiAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPT09IDEpIHtcbiAgICB2YXIgYXR0cnMgPSBhWzBdO1xuICAgIGZvciAodmFyIGkgPSAxOyBpIDwgYS5sZW5ndGg7IGkrKykge1xuICAgICAgYXR0cnMgPSBwdWdfbWVyZ2UoYXR0cnMsIGFbaV0pO1xuICAgIH1cbiAgICByZXR1cm4gYXR0cnM7XG4gIH1cblxuICBmb3IgKHZhciBrZXkgaW4gYikge1xuICAgIGlmIChrZXkgPT09ICdjbGFzcycpIHtcbiAgICAgIHZhciB2YWxBID0gYVtrZXldIHx8IFtdO1xuICAgICAgYVtrZXldID0gKEFycmF5LmlzQXJyYXkodmFsQSkgPyB2YWxBIDogW3ZhbEFdKS5jb25jYXQoYltrZXldIHx8IFtdKTtcbiAgICB9IGVsc2UgaWYgKGtleSA9PT0gJ3N0eWxlJykge1xuICAgICAgdmFyIHZhbEEgPSBwdWdfc3R5bGUoYVtrZXldKTtcbiAgICAgIHZhbEEgPSB2YWxBICYmIHZhbEFbdmFsQS5sZW5ndGggLSAxXSAhPT0gJzsnID8gdmFsQSArICc7JyA6IHZhbEE7XG4gICAgICB2YXIgdmFsQiA9IHB1Z19zdHlsZShiW2tleV0pO1xuICAgICAgdmFsQiA9IHZhbEIgJiYgdmFsQlt2YWxCLmxlbmd0aCAtIDFdICE9PSAnOycgPyB2YWxCICsgJzsnIDogdmFsQjtcbiAgICAgIGFba2V5XSA9IHZhbEEgKyB2YWxCO1xuICAgIH0gZWxzZSB7XG4gICAgICBhW2tleV0gPSBiW2tleV07XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIGE7XG59O1xuXG4vKipcbiAqIFByb2Nlc3MgYXJyYXksIG9iamVjdCwgb3Igc3RyaW5nIGFzIGEgc3RyaW5nIG9mIGNsYXNzZXMgZGVsaW1pdGVkIGJ5IGEgc3BhY2UuXG4gKlxuICogSWYgYHZhbGAgaXMgYW4gYXJyYXksIGFsbCBtZW1iZXJzIG9mIGl0IGFuZCBpdHMgc3ViYXJyYXlzIGFyZSBjb3VudGVkIGFzXG4gKiBjbGFzc2VzLiBJZiBgZXNjYXBpbmdgIGlzIGFuIGFycmF5LCB0aGVuIHdoZXRoZXIgb3Igbm90IHRoZSBpdGVtIGluIGB2YWxgIGlzXG4gKiBlc2NhcGVkIGRlcGVuZHMgb24gdGhlIGNvcnJlc3BvbmRpbmcgaXRlbSBpbiBgZXNjYXBpbmdgLiBJZiBgZXNjYXBpbmdgIGlzXG4gKiBub3QgYW4gYXJyYXksIG5vIGVzY2FwaW5nIGlzIGRvbmUuXG4gKlxuICogSWYgYHZhbGAgaXMgYW4gb2JqZWN0LCBhbGwgdGhlIGtleXMgd2hvc2UgdmFsdWUgaXMgdHJ1dGh5IGFyZSBjb3VudGVkIGFzXG4gKiBjbGFzc2VzLiBObyBlc2NhcGluZyBpcyBkb25lLlxuICpcbiAqIElmIGB2YWxgIGlzIGEgc3RyaW5nLCBpdCBpcyBjb3VudGVkIGFzIGEgY2xhc3MuIE5vIGVzY2FwaW5nIGlzIGRvbmUuXG4gKlxuICogQHBhcmFtIHsoQXJyYXkuPHN0cmluZz58T2JqZWN0LjxzdHJpbmcsIGJvb2xlYW4+fHN0cmluZyl9IHZhbFxuICogQHBhcmFtIHs/QXJyYXkuPHN0cmluZz59IGVzY2FwaW5nXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmV4cG9ydHMuY2xhc3NlcyA9IHB1Z19jbGFzc2VzO1xuZnVuY3Rpb24gcHVnX2NsYXNzZXNfYXJyYXkodmFsLCBlc2NhcGluZykge1xuICB2YXIgY2xhc3NTdHJpbmcgPSAnJywgY2xhc3NOYW1lLCBwYWRkaW5nID0gJycsIGVzY2FwZUVuYWJsZWQgPSBBcnJheS5pc0FycmF5KGVzY2FwaW5nKTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCB2YWwubGVuZ3RoOyBpKyspIHtcbiAgICBjbGFzc05hbWUgPSBwdWdfY2xhc3Nlcyh2YWxbaV0pO1xuICAgIGlmICghY2xhc3NOYW1lKSBjb250aW51ZTtcbiAgICBlc2NhcGVFbmFibGVkICYmIGVzY2FwaW5nW2ldICYmIChjbGFzc05hbWUgPSBwdWdfZXNjYXBlKGNsYXNzTmFtZSkpO1xuICAgIGNsYXNzU3RyaW5nID0gY2xhc3NTdHJpbmcgKyBwYWRkaW5nICsgY2xhc3NOYW1lO1xuICAgIHBhZGRpbmcgPSAnICc7XG4gIH1cbiAgcmV0dXJuIGNsYXNzU3RyaW5nO1xufVxuZnVuY3Rpb24gcHVnX2NsYXNzZXNfb2JqZWN0KHZhbCkge1xuICB2YXIgY2xhc3NTdHJpbmcgPSAnJywgcGFkZGluZyA9ICcnO1xuICBmb3IgKHZhciBrZXkgaW4gdmFsKSB7XG4gICAgaWYgKGtleSAmJiB2YWxba2V5XSAmJiBwdWdfaGFzX293bl9wcm9wZXJ0eS5jYWxsKHZhbCwga2V5KSkge1xuICAgICAgY2xhc3NTdHJpbmcgPSBjbGFzc1N0cmluZyArIHBhZGRpbmcgKyBrZXk7XG4gICAgICBwYWRkaW5nID0gJyAnO1xuICAgIH1cbiAgfVxuICByZXR1cm4gY2xhc3NTdHJpbmc7XG59XG5mdW5jdGlvbiBwdWdfY2xhc3Nlcyh2YWwsIGVzY2FwaW5nKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbCkpIHtcbiAgICByZXR1cm4gcHVnX2NsYXNzZXNfYXJyYXkodmFsLCBlc2NhcGluZyk7XG4gIH0gZWxzZSBpZiAodmFsICYmIHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XG4gICAgcmV0dXJuIHB1Z19jbGFzc2VzX29iamVjdCh2YWwpO1xuICB9IGVsc2Uge1xuICAgIHJldHVybiB2YWwgfHwgJyc7XG4gIH1cbn1cblxuLyoqXG4gKiBDb252ZXJ0IG9iamVjdCBvciBzdHJpbmcgdG8gYSBzdHJpbmcgb2YgQ1NTIHN0eWxlcyBkZWxpbWl0ZWQgYnkgYSBzZW1pY29sb24uXG4gKlxuICogQHBhcmFtIHsoT2JqZWN0LjxzdHJpbmcsIHN0cmluZz58c3RyaW5nKX0gdmFsXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cblxuZXhwb3J0cy5zdHlsZSA9IHB1Z19zdHlsZTtcbmZ1bmN0aW9uIHB1Z19zdHlsZSh2YWwpIHtcbiAgaWYgKCF2YWwpIHJldHVybiAnJztcbiAgaWYgKHR5cGVvZiB2YWwgPT09ICdvYmplY3QnKSB7XG4gICAgdmFyIG91dCA9ICcnO1xuICAgIGZvciAodmFyIHN0eWxlIGluIHZhbCkge1xuICAgICAgLyogaXN0YW5idWwgaWdub3JlIGVsc2UgKi9cbiAgICAgIGlmIChwdWdfaGFzX293bl9wcm9wZXJ0eS5jYWxsKHZhbCwgc3R5bGUpKSB7XG4gICAgICAgIG91dCA9IG91dCArIHN0eWxlICsgJzonICsgdmFsW3N0eWxlXSArICc7JztcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG91dDtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gdmFsICsgJyc7XG4gIH1cbn07XG5cbi8qKlxuICogUmVuZGVyIHRoZSBnaXZlbiBhdHRyaWJ1dGUuXG4gKlxuICogQHBhcmFtIHtTdHJpbmd9IGtleVxuICogQHBhcmFtIHtTdHJpbmd9IHZhbFxuICogQHBhcmFtIHtCb29sZWFufSBlc2NhcGVkXG4gKiBAcGFyYW0ge0Jvb2xlYW59IHRlcnNlXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmV4cG9ydHMuYXR0ciA9IHB1Z19hdHRyO1xuZnVuY3Rpb24gcHVnX2F0dHIoa2V5LCB2YWwsIGVzY2FwZWQsIHRlcnNlKSB7XG4gIGlmICh2YWwgPT09IGZhbHNlIHx8IHZhbCA9PSBudWxsIHx8ICF2YWwgJiYgKGtleSA9PT0gJ2NsYXNzJyB8fCBrZXkgPT09ICdzdHlsZScpKSB7XG4gICAgcmV0dXJuICcnO1xuICB9XG4gIGlmICh2YWwgPT09IHRydWUpIHtcbiAgICByZXR1cm4gJyAnICsgKHRlcnNlID8ga2V5IDoga2V5ICsgJz1cIicgKyBrZXkgKyAnXCInKTtcbiAgfVxuICBpZiAodHlwZW9mIHZhbC50b0pTT04gPT09ICdmdW5jdGlvbicpIHtcbiAgICB2YWwgPSB2YWwudG9KU09OKCk7XG4gIH1cbiAgaWYgKHR5cGVvZiB2YWwgIT09ICdzdHJpbmcnKSB7XG4gICAgdmFsID0gSlNPTi5zdHJpbmdpZnkodmFsKTtcbiAgICBpZiAoIWVzY2FwZWQgJiYgdmFsLmluZGV4T2YoJ1wiJykgIT09IC0xKSB7XG4gICAgICByZXR1cm4gJyAnICsga2V5ICsgJz1cXCcnICsgdmFsLnJlcGxhY2UoLycvZywgJyYjMzk7JykgKyAnXFwnJztcbiAgICB9XG4gIH1cbiAgaWYgKGVzY2FwZWQpIHZhbCA9IHB1Z19lc2NhcGUodmFsKTtcbiAgcmV0dXJuICcgJyArIGtleSArICc9XCInICsgdmFsICsgJ1wiJztcbn07XG5cbi8qKlxuICogUmVuZGVyIHRoZSBnaXZlbiBhdHRyaWJ1dGVzIG9iamVjdC5cbiAqXG4gKiBAcGFyYW0ge09iamVjdH0gb2JqXG4gKiBAcGFyYW0ge09iamVjdH0gdGVyc2Ugd2hldGhlciB0byB1c2UgSFRNTDUgdGVyc2UgYm9vbGVhbiBhdHRyaWJ1dGVzXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKi9cbmV4cG9ydHMuYXR0cnMgPSBwdWdfYXR0cnM7XG5mdW5jdGlvbiBwdWdfYXR0cnMob2JqLCB0ZXJzZSl7XG4gIHZhciBhdHRycyA9ICcnO1xuXG4gIGZvciAodmFyIGtleSBpbiBvYmopIHtcbiAgICBpZiAocHVnX2hhc19vd25fcHJvcGVydHkuY2FsbChvYmosIGtleSkpIHtcbiAgICAgIHZhciB2YWwgPSBvYmpba2V5XTtcblxuICAgICAgaWYgKCdjbGFzcycgPT09IGtleSkge1xuICAgICAgICB2YWwgPSBwdWdfY2xhc3Nlcyh2YWwpO1xuICAgICAgICBhdHRycyA9IHB1Z19hdHRyKGtleSwgdmFsLCBmYWxzZSwgdGVyc2UpICsgYXR0cnM7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKCdzdHlsZScgPT09IGtleSkge1xuICAgICAgICB2YWwgPSBwdWdfc3R5bGUodmFsKTtcbiAgICAgIH1cbiAgICAgIGF0dHJzICs9IHB1Z19hdHRyKGtleSwgdmFsLCBmYWxzZSwgdGVyc2UpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBhdHRycztcbn07XG5cbi8qKlxuICogRXNjYXBlIHRoZSBnaXZlbiBzdHJpbmcgb2YgYGh0bWxgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBodG1sXG4gKiBAcmV0dXJuIHtTdHJpbmd9XG4gKiBAYXBpIHByaXZhdGVcbiAqL1xuXG52YXIgcHVnX21hdGNoX2h0bWwgPSAvW1wiJjw+XS87XG5leHBvcnRzLmVzY2FwZSA9IHB1Z19lc2NhcGU7XG5mdW5jdGlvbiBwdWdfZXNjYXBlKF9odG1sKXtcbiAgdmFyIGh0bWwgPSAnJyArIF9odG1sO1xuICB2YXIgcmVnZXhSZXN1bHQgPSBwdWdfbWF0Y2hfaHRtbC5leGVjKGh0bWwpO1xuICBpZiAoIXJlZ2V4UmVzdWx0KSByZXR1cm4gX2h0bWw7XG5cbiAgdmFyIHJlc3VsdCA9ICcnO1xuICB2YXIgaSwgbGFzdEluZGV4LCBlc2NhcGU7XG4gIGZvciAoaSA9IHJlZ2V4UmVzdWx0LmluZGV4LCBsYXN0SW5kZXggPSAwOyBpIDwgaHRtbC5sZW5ndGg7IGkrKykge1xuICAgIHN3aXRjaCAoaHRtbC5jaGFyQ29kZUF0KGkpKSB7XG4gICAgICBjYXNlIDM0OiBlc2NhcGUgPSAnJnF1b3Q7JzsgYnJlYWs7XG4gICAgICBjYXNlIDM4OiBlc2NhcGUgPSAnJmFtcDsnOyBicmVhaztcbiAgICAgIGNhc2UgNjA6IGVzY2FwZSA9ICcmbHQ7JzsgYnJlYWs7XG4gICAgICBjYXNlIDYyOiBlc2NhcGUgPSAnJmd0Oyc7IGJyZWFrO1xuICAgICAgZGVmYXVsdDogY29udGludWU7XG4gICAgfVxuICAgIGlmIChsYXN0SW5kZXggIT09IGkpIHJlc3VsdCArPSBodG1sLnN1YnN0cmluZyhsYXN0SW5kZXgsIGkpO1xuICAgIGxhc3RJbmRleCA9IGkgKyAxO1xuICAgIHJlc3VsdCArPSBlc2NhcGU7XG4gIH1cbiAgaWYgKGxhc3RJbmRleCAhPT0gaSkgcmV0dXJuIHJlc3VsdCArIGh0bWwuc3Vic3RyaW5nKGxhc3RJbmRleCwgaSk7XG4gIGVsc2UgcmV0dXJuIHJlc3VsdDtcbn07XG5cbi8qKlxuICogUmUtdGhyb3cgdGhlIGdpdmVuIGBlcnJgIGluIGNvbnRleHQgdG8gdGhlXG4gKiB0aGUgcHVnIGluIGBmaWxlbmFtZWAgYXQgdGhlIGdpdmVuIGBsaW5lbm9gLlxuICpcbiAqIEBwYXJhbSB7RXJyb3J9IGVyclxuICogQHBhcmFtIHtTdHJpbmd9IGZpbGVuYW1lXG4gKiBAcGFyYW0ge1N0cmluZ30gbGluZW5vXG4gKiBAcGFyYW0ge1N0cmluZ30gc3RyIG9yaWdpbmFsIHNvdXJjZVxuICogQGFwaSBwcml2YXRlXG4gKi9cblxuZXhwb3J0cy5yZXRocm93ID0gcHVnX3JldGhyb3c7XG5mdW5jdGlvbiBwdWdfcmV0aHJvdyhlcnIsIGZpbGVuYW1lLCBsaW5lbm8sIHN0cil7XG4gIGlmICghKGVyciBpbnN0YW5jZW9mIEVycm9yKSkgdGhyb3cgZXJyO1xuICBpZiAoKHR5cGVvZiB3aW5kb3cgIT0gJ3VuZGVmaW5lZCcgfHwgIWZpbGVuYW1lKSAmJiAhc3RyKSB7XG4gICAgZXJyLm1lc3NhZ2UgKz0gJyBvbiBsaW5lICcgKyBsaW5lbm87XG4gICAgdGhyb3cgZXJyO1xuICB9XG4gIHRyeSB7XG4gICAgc3RyID0gc3RyIHx8IHJlcXVpcmUoJ2ZzJykucmVhZEZpbGVTeW5jKGZpbGVuYW1lLCAndXRmOCcpXG4gIH0gY2F0Y2ggKGV4KSB7XG4gICAgcHVnX3JldGhyb3coZXJyLCBudWxsLCBsaW5lbm8pXG4gIH1cbiAgdmFyIGNvbnRleHQgPSAzXG4gICAgLCBsaW5lcyA9IHN0ci5zcGxpdCgnXFxuJylcbiAgICAsIHN0YXJ0ID0gTWF0aC5tYXgobGluZW5vIC0gY29udGV4dCwgMClcbiAgICAsIGVuZCA9IE1hdGgubWluKGxpbmVzLmxlbmd0aCwgbGluZW5vICsgY29udGV4dCk7XG5cbiAgLy8gRXJyb3IgY29udGV4dFxuICB2YXIgY29udGV4dCA9IGxpbmVzLnNsaWNlKHN0YXJ0LCBlbmQpLm1hcChmdW5jdGlvbihsaW5lLCBpKXtcbiAgICB2YXIgY3VyciA9IGkgKyBzdGFydCArIDE7XG4gICAgcmV0dXJuIChjdXJyID09IGxpbmVubyA/ICcgID4gJyA6ICcgICAgJylcbiAgICAgICsgY3VyclxuICAgICAgKyAnfCAnXG4gICAgICArIGxpbmU7XG4gIH0pLmpvaW4oJ1xcbicpO1xuXG4gIC8vIEFsdGVyIGV4Y2VwdGlvbiBtZXNzYWdlXG4gIGVyci5wYXRoID0gZmlsZW5hbWU7XG4gIGVyci5tZXNzYWdlID0gKGZpbGVuYW1lIHx8ICdQdWcnKSArICc6JyArIGxpbmVub1xuICAgICsgJ1xcbicgKyBjb250ZXh0ICsgJ1xcblxcbicgKyBlcnIubWVzc2FnZTtcbiAgdGhyb3cgZXJyO1xufTtcbiIsIi8qXG5cdE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG5cdEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG5cbnZhciBzdHlsZXNJbkRvbSA9IHt9O1xuXG52YXJcdG1lbW9pemUgPSBmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW87XG5cblx0cmV0dXJuIGZ1bmN0aW9uICgpIHtcblx0XHRpZiAodHlwZW9mIG1lbW8gPT09IFwidW5kZWZpbmVkXCIpIG1lbW8gPSBmbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuXHRcdHJldHVybiBtZW1vO1xuXHR9O1xufTtcblxudmFyIGlzT2xkSUUgPSBtZW1vaXplKGZ1bmN0aW9uICgpIHtcblx0Ly8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3Ncblx0Ly8gQHNlZSBodHRwOi8vYnJvd3NlcmhhY2tzLmNvbS8jaGFjay1lNzFkODY5MmY2NTMzNDE3M2ZlZTcxNWMyMjJjYjgwNVxuXHQvLyBUZXN0cyBmb3IgZXhpc3RlbmNlIG9mIHN0YW5kYXJkIGdsb2JhbHMgaXMgdG8gYWxsb3cgc3R5bGUtbG9hZGVyXG5cdC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuXHQvLyBAc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS93ZWJwYWNrLWNvbnRyaWIvc3R5bGUtbG9hZGVyL2lzc3Vlcy8xNzdcblx0cmV0dXJuIHdpbmRvdyAmJiBkb2N1bWVudCAmJiBkb2N1bWVudC5hbGwgJiYgIXdpbmRvdy5hdG9iO1xufSk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiAodGFyZ2V0KSB7XG4gIHJldHVybiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG59O1xuXG52YXIgZ2V0RWxlbWVudCA9IChmdW5jdGlvbiAoZm4pIHtcblx0dmFyIG1lbW8gPSB7fTtcblxuXHRyZXR1cm4gZnVuY3Rpb24odGFyZ2V0KSB7XG4gICAgICAgICAgICAgICAgLy8gSWYgcGFzc2luZyBmdW5jdGlvbiBpbiBvcHRpb25zLCB0aGVuIHVzZSBpdCBmb3IgcmVzb2x2ZSBcImhlYWRcIiBlbGVtZW50LlxuICAgICAgICAgICAgICAgIC8vIFVzZWZ1bCBmb3IgU2hhZG93IFJvb3Qgc3R5bGUgaS5lXG4gICAgICAgICAgICAgICAgLy8ge1xuICAgICAgICAgICAgICAgIC8vICAgaW5zZXJ0SW50bzogZnVuY3Rpb24gKCkgeyByZXR1cm4gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNmb29cIikuc2hhZG93Um9vdCB9XG4gICAgICAgICAgICAgICAgLy8gfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gdGFyZ2V0KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG5cdFx0XHR2YXIgc3R5bGVUYXJnZXQgPSBnZXRUYXJnZXQuY2FsbCh0aGlzLCB0YXJnZXQpO1xuXHRcdFx0Ly8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblx0XHRcdGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHQvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuXHRcdFx0XHRcdC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBzdHlsZVRhcmdldC5jb250ZW50RG9jdW1lbnQuaGVhZDtcblx0XHRcdFx0fSBjYXRjaChlKSB7XG5cdFx0XHRcdFx0c3R5bGVUYXJnZXQgPSBudWxsO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcblx0XHR9XG5cdFx0cmV0dXJuIG1lbW9bdGFyZ2V0XVxuXHR9O1xufSkoKTtcblxudmFyIHNpbmdsZXRvbiA9IG51bGw7XG52YXJcdHNpbmdsZXRvbkNvdW50ZXIgPSAwO1xudmFyXHRzdHlsZXNJbnNlcnRlZEF0VG9wID0gW107XG5cbnZhclx0Zml4VXJscyA9IHJlcXVpcmUoXCIuL3VybHNcIik7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24obGlzdCwgb3B0aW9ucykge1xuXHRpZiAodHlwZW9mIERFQlVHICE9PSBcInVuZGVmaW5lZFwiICYmIERFQlVHKSB7XG5cdFx0aWYgKHR5cGVvZiBkb2N1bWVudCAhPT0gXCJvYmplY3RcIikgdGhyb3cgbmV3IEVycm9yKFwiVGhlIHN0eWxlLWxvYWRlciBjYW5ub3QgYmUgdXNlZCBpbiBhIG5vbi1icm93c2VyIGVudmlyb25tZW50XCIpO1xuXHR9XG5cblx0b3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG5cblx0b3B0aW9ucy5hdHRycyA9IHR5cGVvZiBvcHRpb25zLmF0dHJzID09PSBcIm9iamVjdFwiID8gb3B0aW9ucy5hdHRycyA6IHt9O1xuXG5cdC8vIEZvcmNlIHNpbmdsZS10YWcgc29sdXRpb24gb24gSUU2LTksIHdoaWNoIGhhcyBhIGhhcmQgbGltaXQgb24gdGhlICMgb2YgPHN0eWxlPlxuXHQvLyB0YWdzIGl0IHdpbGwgYWxsb3cgb24gYSBwYWdlXG5cdGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSBcImJvb2xlYW5cIikgb3B0aW9ucy5zaW5nbGV0b24gPSBpc09sZElFKCk7XG5cblx0Ly8gQnkgZGVmYXVsdCwgYWRkIDxzdHlsZT4gdGFncyB0byB0aGUgPGhlYWQ+IGVsZW1lbnRcbiAgICAgICAgaWYgKCFvcHRpb25zLmluc2VydEludG8pIG9wdGlvbnMuaW5zZXJ0SW50byA9IFwiaGVhZFwiO1xuXG5cdC8vIEJ5IGRlZmF1bHQsIGFkZCA8c3R5bGU+IHRhZ3MgdG8gdGhlIGJvdHRvbSBvZiB0aGUgdGFyZ2V0XG5cdGlmICghb3B0aW9ucy5pbnNlcnRBdCkgb3B0aW9ucy5pbnNlcnRBdCA9IFwiYm90dG9tXCI7XG5cblx0dmFyIHN0eWxlcyA9IGxpc3RUb1N0eWxlcyhsaXN0LCBvcHRpb25zKTtcblxuXHRhZGRTdHlsZXNUb0RvbShzdHlsZXMsIG9wdGlvbnMpO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGUgKG5ld0xpc3QpIHtcblx0XHR2YXIgbWF5UmVtb3ZlID0gW107XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBzdHlsZXNbaV07XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdFx0ZG9tU3R5bGUucmVmcy0tO1xuXHRcdFx0bWF5UmVtb3ZlLnB1c2goZG9tU3R5bGUpO1xuXHRcdH1cblxuXHRcdGlmKG5ld0xpc3QpIHtcblx0XHRcdHZhciBuZXdTdHlsZXMgPSBsaXN0VG9TdHlsZXMobmV3TGlzdCwgb3B0aW9ucyk7XG5cdFx0XHRhZGRTdHlsZXNUb0RvbShuZXdTdHlsZXMsIG9wdGlvbnMpO1xuXHRcdH1cblxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgbWF5UmVtb3ZlLmxlbmd0aDsgaSsrKSB7XG5cdFx0XHR2YXIgZG9tU3R5bGUgPSBtYXlSZW1vdmVbaV07XG5cblx0XHRcdGlmKGRvbVN0eWxlLnJlZnMgPT09IDApIHtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykgZG9tU3R5bGUucGFydHNbal0oKTtcblxuXHRcdFx0XHRkZWxldGUgc3R5bGVzSW5Eb21bZG9tU3R5bGUuaWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn07XG5cbmZ1bmN0aW9uIGFkZFN0eWxlc1RvRG9tIChzdHlsZXMsIG9wdGlvbnMpIHtcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IHN0eWxlc1tpXTtcblx0XHR2YXIgZG9tU3R5bGUgPSBzdHlsZXNJbkRvbVtpdGVtLmlkXTtcblxuXHRcdGlmKGRvbVN0eWxlKSB7XG5cdFx0XHRkb21TdHlsZS5yZWZzKys7XG5cblx0XHRcdGZvcih2YXIgaiA9IDA7IGogPCBkb21TdHlsZS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRkb21TdHlsZS5wYXJ0c1tqXShpdGVtLnBhcnRzW2pdKTtcblx0XHRcdH1cblxuXHRcdFx0Zm9yKDsgaiA8IGl0ZW0ucGFydHMubGVuZ3RoOyBqKyspIHtcblx0XHRcdFx0ZG9tU3R5bGUucGFydHMucHVzaChhZGRTdHlsZShpdGVtLnBhcnRzW2pdLCBvcHRpb25zKSk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHZhciBwYXJ0cyA9IFtdO1xuXG5cdFx0XHRmb3IodmFyIGogPSAwOyBqIDwgaXRlbS5wYXJ0cy5sZW5ndGg7IGorKykge1xuXHRcdFx0XHRwYXJ0cy5wdXNoKGFkZFN0eWxlKGl0ZW0ucGFydHNbal0sIG9wdGlvbnMpKTtcblx0XHRcdH1cblxuXHRcdFx0c3R5bGVzSW5Eb21baXRlbS5pZF0gPSB7aWQ6IGl0ZW0uaWQsIHJlZnM6IDEsIHBhcnRzOiBwYXJ0c307XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGxpc3RUb1N0eWxlcyAobGlzdCwgb3B0aW9ucykge1xuXHR2YXIgc3R5bGVzID0gW107XG5cdHZhciBuZXdTdHlsZXMgPSB7fTtcblxuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgaXRlbSA9IGxpc3RbaV07XG5cdFx0dmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG5cdFx0dmFyIGNzcyA9IGl0ZW1bMV07XG5cdFx0dmFyIG1lZGlhID0gaXRlbVsyXTtcblx0XHR2YXIgc291cmNlTWFwID0gaXRlbVszXTtcblx0XHR2YXIgcGFydCA9IHtjc3M6IGNzcywgbWVkaWE6IG1lZGlhLCBzb3VyY2VNYXA6IHNvdXJjZU1hcH07XG5cblx0XHRpZighbmV3U3R5bGVzW2lkXSkgc3R5bGVzLnB1c2gobmV3U3R5bGVzW2lkXSA9IHtpZDogaWQsIHBhcnRzOiBbcGFydF19KTtcblx0XHRlbHNlIG5ld1N0eWxlc1tpZF0ucGFydHMucHVzaChwYXJ0KTtcblx0fVxuXG5cdHJldHVybiBzdHlsZXM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudCAob3B0aW9ucywgc3R5bGUpIHtcblx0dmFyIHRhcmdldCA9IGdldEVsZW1lbnQob3B0aW9ucy5pbnNlcnRJbnRvKVxuXG5cdGlmICghdGFyZ2V0KSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnRJbnRvJyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG5cdH1cblxuXHR2YXIgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AgPSBzdHlsZXNJbnNlcnRlZEF0VG9wW3N0eWxlc0luc2VydGVkQXRUb3AubGVuZ3RoIC0gMV07XG5cblx0aWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwidG9wXCIpIHtcblx0XHRpZiAoIWxhc3RTdHlsZUVsZW1lbnRJbnNlcnRlZEF0VG9wKSB7XG5cdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCB0YXJnZXQuZmlyc3RDaGlsZCk7XG5cdFx0fSBlbHNlIGlmIChsYXN0U3R5bGVFbGVtZW50SW5zZXJ0ZWRBdFRvcC5uZXh0U2libGluZykge1xuXHRcdFx0dGFyZ2V0Lmluc2VydEJlZm9yZShzdHlsZSwgbGFzdFN0eWxlRWxlbWVudEluc2VydGVkQXRUb3AubmV4dFNpYmxpbmcpO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHRcdH1cblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnB1c2goc3R5bGUpO1xuXHR9IGVsc2UgaWYgKG9wdGlvbnMuaW5zZXJ0QXQgPT09IFwiYm90dG9tXCIpIHtcblx0XHR0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuXHR9IGVsc2UgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydEF0ID09PSBcIm9iamVjdFwiICYmIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKSB7XG5cdFx0dmFyIG5leHRTaWJsaW5nID0gZ2V0RWxlbWVudChvcHRpb25zLmluc2VydEludG8gKyBcIiBcIiArIG9wdGlvbnMuaW5zZXJ0QXQuYmVmb3JlKTtcblx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKHN0eWxlLCBuZXh0U2libGluZyk7XG5cdH0gZWxzZSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKFwiW1N0eWxlIExvYWRlcl1cXG5cXG4gSW52YWxpZCB2YWx1ZSBmb3IgcGFyYW1ldGVyICdpbnNlcnRBdCcgKCdvcHRpb25zLmluc2VydEF0JykgZm91bmQuXFxuIE11c3QgYmUgJ3RvcCcsICdib3R0b20nLCBvciBPYmplY3QuXFxuIChodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlciNpbnNlcnRhdClcXG5cIik7XG5cdH1cbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50IChzdHlsZSkge1xuXHRpZiAoc3R5bGUucGFyZW50Tm9kZSA9PT0gbnVsbCkgcmV0dXJuIGZhbHNlO1xuXHRzdHlsZS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKHN0eWxlKTtcblxuXHR2YXIgaWR4ID0gc3R5bGVzSW5zZXJ0ZWRBdFRvcC5pbmRleE9mKHN0eWxlKTtcblx0aWYoaWR4ID49IDApIHtcblx0XHRzdHlsZXNJbnNlcnRlZEF0VG9wLnNwbGljZShpZHgsIDEpO1xuXHR9XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVN0eWxlRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgc3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG5cblx0aWYob3B0aW9ucy5hdHRycy50eXBlID09PSB1bmRlZmluZWQpIHtcblx0XHRvcHRpb25zLmF0dHJzLnR5cGUgPSBcInRleHQvY3NzXCI7XG5cdH1cblxuXHRhZGRBdHRycyhzdHlsZSwgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBzdHlsZSk7XG5cblx0cmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiBjcmVhdGVMaW5rRWxlbWVudCAob3B0aW9ucykge1xuXHR2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIpO1xuXG5cdGlmKG9wdGlvbnMuYXR0cnMudHlwZSA9PT0gdW5kZWZpbmVkKSB7XG5cdFx0b3B0aW9ucy5hdHRycy50eXBlID0gXCJ0ZXh0L2Nzc1wiO1xuXHR9XG5cdG9wdGlvbnMuYXR0cnMucmVsID0gXCJzdHlsZXNoZWV0XCI7XG5cblx0YWRkQXR0cnMobGluaywgb3B0aW9ucy5hdHRycyk7XG5cdGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zLCBsaW5rKTtcblxuXHRyZXR1cm4gbGluaztcbn1cblxuZnVuY3Rpb24gYWRkQXR0cnMgKGVsLCBhdHRycykge1xuXHRPYmplY3Qua2V5cyhhdHRycykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG5cdFx0ZWwuc2V0QXR0cmlidXRlKGtleSwgYXR0cnNba2V5XSk7XG5cdH0pO1xufVxuXG5mdW5jdGlvbiBhZGRTdHlsZSAob2JqLCBvcHRpb25zKSB7XG5cdHZhciBzdHlsZSwgdXBkYXRlLCByZW1vdmUsIHJlc3VsdDtcblxuXHQvLyBJZiBhIHRyYW5zZm9ybSBmdW5jdGlvbiB3YXMgZGVmaW5lZCwgcnVuIGl0IG9uIHRoZSBjc3Ncblx0aWYgKG9wdGlvbnMudHJhbnNmb3JtICYmIG9iai5jc3MpIHtcblx0ICAgIHJlc3VsdCA9IG9wdGlvbnMudHJhbnNmb3JtKG9iai5jc3MpO1xuXG5cdCAgICBpZiAocmVzdWx0KSB7XG5cdCAgICBcdC8vIElmIHRyYW5zZm9ybSByZXR1cm5zIGEgdmFsdWUsIHVzZSB0aGF0IGluc3RlYWQgb2YgdGhlIG9yaWdpbmFsIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgcnVubmluZyBydW50aW1lIHRyYW5zZm9ybWF0aW9ucyBvbiB0aGUgY3NzLlxuXHQgICAgXHRvYmouY3NzID0gcmVzdWx0O1xuXHQgICAgfSBlbHNlIHtcblx0ICAgIFx0Ly8gSWYgdGhlIHRyYW5zZm9ybSBmdW5jdGlvbiByZXR1cm5zIGEgZmFsc3kgdmFsdWUsIGRvbid0IGFkZCB0aGlzIGNzcy5cblx0ICAgIFx0Ly8gVGhpcyBhbGxvd3MgY29uZGl0aW9uYWwgbG9hZGluZyBvZiBjc3Ncblx0ICAgIFx0cmV0dXJuIGZ1bmN0aW9uKCkge1xuXHQgICAgXHRcdC8vIG5vb3Bcblx0ICAgIFx0fTtcblx0ICAgIH1cblx0fVxuXG5cdGlmIChvcHRpb25zLnNpbmdsZXRvbikge1xuXHRcdHZhciBzdHlsZUluZGV4ID0gc2luZ2xldG9uQ291bnRlcisrO1xuXG5cdFx0c3R5bGUgPSBzaW5nbGV0b24gfHwgKHNpbmdsZXRvbiA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKSk7XG5cblx0XHR1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcblx0XHRyZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuXG5cdH0gZWxzZSBpZiAoXG5cdFx0b2JqLnNvdXJjZU1hcCAmJlxuXHRcdHR5cGVvZiBVUkwgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBVUkwuY3JlYXRlT2JqZWN0VVJMID09PSBcImZ1bmN0aW9uXCIgJiZcblx0XHR0eXBlb2YgVVJMLnJldm9rZU9iamVjdFVSTCA9PT0gXCJmdW5jdGlvblwiICYmXG5cdFx0dHlwZW9mIEJsb2IgPT09IFwiZnVuY3Rpb25cIiAmJlxuXHRcdHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCJcblx0KSB7XG5cdFx0c3R5bGUgPSBjcmVhdGVMaW5rRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSB1cGRhdGVMaW5rLmJpbmQobnVsbCwgc3R5bGUsIG9wdGlvbnMpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cblx0XHRcdGlmKHN0eWxlLmhyZWYpIFVSTC5yZXZva2VPYmplY3RVUkwoc3R5bGUuaHJlZik7XG5cdFx0fTtcblx0fSBlbHNlIHtcblx0XHRzdHlsZSA9IGNyZWF0ZVN0eWxlRWxlbWVudChvcHRpb25zKTtcblx0XHR1cGRhdGUgPSBhcHBseVRvVGFnLmJpbmQobnVsbCwgc3R5bGUpO1xuXHRcdHJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcblx0XHRcdHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZSk7XG5cdFx0fTtcblx0fVxuXG5cdHVwZGF0ZShvYmopO1xuXG5cdHJldHVybiBmdW5jdGlvbiB1cGRhdGVTdHlsZSAobmV3T2JqKSB7XG5cdFx0aWYgKG5ld09iaikge1xuXHRcdFx0aWYgKFxuXHRcdFx0XHRuZXdPYmouY3NzID09PSBvYmouY3NzICYmXG5cdFx0XHRcdG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmXG5cdFx0XHRcdG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXBcblx0XHRcdCkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdHVwZGF0ZShvYmogPSBuZXdPYmopO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRyZW1vdmUoKTtcblx0XHR9XG5cdH07XG59XG5cbnZhciByZXBsYWNlVGV4dCA9IChmdW5jdGlvbiAoKSB7XG5cdHZhciB0ZXh0U3RvcmUgPSBbXTtcblxuXHRyZXR1cm4gZnVuY3Rpb24gKGluZGV4LCByZXBsYWNlbWVudCkge1xuXHRcdHRleHRTdG9yZVtpbmRleF0gPSByZXBsYWNlbWVudDtcblxuXHRcdHJldHVybiB0ZXh0U3RvcmUuZmlsdGVyKEJvb2xlYW4pLmpvaW4oJ1xcbicpO1xuXHR9O1xufSkoKTtcblxuZnVuY3Rpb24gYXBwbHlUb1NpbmdsZXRvblRhZyAoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuXHR2YXIgY3NzID0gcmVtb3ZlID8gXCJcIiA6IG9iai5jc3M7XG5cblx0aWYgKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSByZXBsYWNlVGV4dChpbmRleCwgY3NzKTtcblx0fSBlbHNlIHtcblx0XHR2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGNzcyk7XG5cdFx0dmFyIGNoaWxkTm9kZXMgPSBzdHlsZS5jaGlsZE5vZGVzO1xuXG5cdFx0aWYgKGNoaWxkTm9kZXNbaW5kZXhdKSBzdHlsZS5yZW1vdmVDaGlsZChjaGlsZE5vZGVzW2luZGV4XSk7XG5cblx0XHRpZiAoY2hpbGROb2Rlcy5sZW5ndGgpIHtcblx0XHRcdHN0eWxlLmluc2VydEJlZm9yZShjc3NOb2RlLCBjaGlsZE5vZGVzW2luZGV4XSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHN0eWxlLmFwcGVuZENoaWxkKGNzc05vZGUpO1xuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBhcHBseVRvVGFnIChzdHlsZSwgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgbWVkaWEgPSBvYmoubWVkaWE7XG5cblx0aWYobWVkaWEpIHtcblx0XHRzdHlsZS5zZXRBdHRyaWJ1dGUoXCJtZWRpYVwiLCBtZWRpYSlcblx0fVxuXG5cdGlmKHN0eWxlLnN0eWxlU2hlZXQpIHtcblx0XHRzdHlsZS5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG5cdH0gZWxzZSB7XG5cdFx0d2hpbGUoc3R5bGUuZmlyc3RDaGlsZCkge1xuXHRcdFx0c3R5bGUucmVtb3ZlQ2hpbGQoc3R5bGUuZmlyc3RDaGlsZCk7XG5cdFx0fVxuXG5cdFx0c3R5bGUuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG5cdH1cbn1cblxuZnVuY3Rpb24gdXBkYXRlTGluayAobGluaywgb3B0aW9ucywgb2JqKSB7XG5cdHZhciBjc3MgPSBvYmouY3NzO1xuXHR2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuXHQvKlxuXHRcdElmIGNvbnZlcnRUb0Fic29sdXRlVXJscyBpc24ndCBkZWZpbmVkLCBidXQgc291cmNlbWFwcyBhcmUgZW5hYmxlZFxuXHRcdGFuZCB0aGVyZSBpcyBubyBwdWJsaWNQYXRoIGRlZmluZWQgdGhlbiBsZXRzIHR1cm4gY29udmVydFRvQWJzb2x1dGVVcmxzXG5cdFx0b24gYnkgZGVmYXVsdC4gIE90aGVyd2lzZSBkZWZhdWx0IHRvIHRoZSBjb252ZXJ0VG9BYnNvbHV0ZVVybHMgb3B0aW9uXG5cdFx0ZGlyZWN0bHlcblx0Ki9cblx0dmFyIGF1dG9GaXhVcmxzID0gb3B0aW9ucy5jb252ZXJ0VG9BYnNvbHV0ZVVybHMgPT09IHVuZGVmaW5lZCAmJiBzb3VyY2VNYXA7XG5cblx0aWYgKG9wdGlvbnMuY29udmVydFRvQWJzb2x1dGVVcmxzIHx8IGF1dG9GaXhVcmxzKSB7XG5cdFx0Y3NzID0gZml4VXJscyhjc3MpO1xuXHR9XG5cblx0aWYgKHNvdXJjZU1hcCkge1xuXHRcdC8vIGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9hLzI2NjAzODc1XG5cdFx0Y3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIiArIGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSkgKyBcIiAqL1wiO1xuXHR9XG5cblx0dmFyIGJsb2IgPSBuZXcgQmxvYihbY3NzXSwgeyB0eXBlOiBcInRleHQvY3NzXCIgfSk7XG5cblx0dmFyIG9sZFNyYyA9IGxpbmsuaHJlZjtcblxuXHRsaW5rLmhyZWYgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpO1xuXG5cdGlmKG9sZFNyYykgVVJMLnJldm9rZU9iamVjdFVSTChvbGRTcmMpO1xufVxuIiwiLypcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcblx0QXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uKHVzZVNvdXJjZU1hcCkge1xuXHR2YXIgbGlzdCA9IFtdO1xuXG5cdC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcblx0bGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuXHRcdFx0dmFyIGNvbnRlbnQgPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCk7XG5cdFx0XHRpZihpdGVtWzJdKSB7XG5cdFx0XHRcdHJldHVybiBcIkBtZWRpYSBcIiArIGl0ZW1bMl0gKyBcIntcIiArIGNvbnRlbnQgKyBcIn1cIjtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHJldHVybiBjb250ZW50O1xuXHRcdFx0fVxuXHRcdH0pLmpvaW4oXCJcIik7XG5cdH07XG5cblx0Ly8gaW1wb3J0IGEgbGlzdCBvZiBtb2R1bGVzIGludG8gdGhlIGxpc3Rcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xuXHRcdGlmKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKVxuXHRcdFx0bW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgXCJcIl1dO1xuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG5cdFx0Zm9yKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBpZCA9IHRoaXNbaV1bMF07XG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXG5cdFx0XHRcdGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcblx0XHR9XG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0dmFyIGl0ZW0gPSBtb2R1bGVzW2ldO1xuXHRcdFx0Ly8gc2tpcCBhbHJlYWR5IGltcG9ydGVkIG1vZHVsZVxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcblx0XHRcdC8vICB3aGVuIGEgbW9kdWxlIGlzIGltcG9ydGVkIG11bHRpcGxlIHRpbWVzIHdpdGggZGlmZmVyZW50IG1lZGlhIHF1ZXJpZXMuXG5cdFx0XHQvLyAgSSBob3BlIHRoaXMgd2lsbCBuZXZlciBvY2N1ciAoSGV5IHRoaXMgd2F5IHdlIGhhdmUgc21hbGxlciBidW5kbGVzKVxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcblx0XHRcdFx0aWYobWVkaWFRdWVyeSAmJiAhaXRlbVsyXSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xuXHRcdFx0XHRcdGl0ZW1bMl0gPSBcIihcIiArIGl0ZW1bMl0gKyBcIikgYW5kIChcIiArIG1lZGlhUXVlcnkgKyBcIilcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xuXHRyZXR1cm4gbGlzdDtcbn07XG5cbmZ1bmN0aW9uIGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKSB7XG5cdHZhciBjb250ZW50ID0gaXRlbVsxXSB8fCAnJztcblx0dmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuXHRpZiAoIWNzc01hcHBpbmcpIHtcblx0XHRyZXR1cm4gY29udGVudDtcblx0fVxuXG5cdGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09ICdmdW5jdGlvbicpIHtcblx0XHR2YXIgc291cmNlTWFwcGluZyA9IHRvQ29tbWVudChjc3NNYXBwaW5nKTtcblx0XHR2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuXHRcdFx0cmV0dXJuICcvKiMgc291cmNlVVJMPScgKyBjc3NNYXBwaW5nLnNvdXJjZVJvb3QgKyBzb3VyY2UgKyAnICovJ1xuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIFtjb250ZW50XS5jb25jYXQoc291cmNlVVJMcykuY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbignXFxuJyk7XG5cdH1cblxuXHRyZXR1cm4gW2NvbnRlbnRdLmpvaW4oJ1xcbicpO1xufVxuXG4vLyBBZGFwdGVkIGZyb20gY29udmVydC1zb3VyY2UtbWFwIChNSVQpXG5mdW5jdGlvbiB0b0NvbW1lbnQoc291cmNlTWFwKSB7XG5cdC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZlxuXHR2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcblx0dmFyIGRhdGEgPSAnc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsJyArIGJhc2U2NDtcblxuXHRyZXR1cm4gJy8qIyAnICsgZGF0YSArICcgKi8nO1xufVxuIiwidmFyIHB1ZyA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3B1Zy1ydW50aW1lL2luZGV4LmpzXCIpO1xuXG5mdW5jdGlvbiB0ZW1wbGF0ZShsb2NhbHMpIHt2YXIgcHVnX2h0bWwgPSBcIlwiLCBwdWdfbWl4aW5zID0ge30sIHB1Z19pbnRlcnA7dmFyIHNvY2lhbCA9IFtcbiAgICB7IGNsYXNzTmFtZTogJ21haWwnLCBsaW5rOiAnbWFpbHRvOmd1aWxoZXJtZS5nb2lzQGRldmdvaXMuY29tJyB9LFxuICAgIHsgY2xhc3NOYW1lOiAnZmFjZWJvb2snLCBsaW5rOiAnaHR0cHM6Ly93d3cuZmFjZWJvb2suY29tL2d1aWxoZXJtZWpjZ29pcy8nIH0sXG4gICAgeyBjbGFzc05hbWU6ICdnaXRodWInLCBsaW5rOiAnaHR0cHM6Ly9naXRodWIuY29tL2d1aWxoZXJtZWpjZ29pcy8nIH0sXG4gICAgeyBjbGFzc05hbWU6ICd0d2l0dGVyJywgbGluazogJ2h0dHBzOi8vdHdpdHRlci5jb20vZ3VpbGhlcm1lamNnb2lzLycgfSxcbiAgICB7IGNsYXNzTmFtZTogJ2luc3RhZ3JhbScsIGxpbms6ICdodHRwczovL3d3dy5pbnN0YWdyYW0uY29tL2d1aWxoZXJtZWpjZ29pcy8nIH0sXG4gICAgeyBjbGFzc05hbWU6ICdjb2RlcGVuJywgbGluazogJ2h0dHBzOi8vd3d3Lmluc3RhZ3JhbS5jb20vZ3VpbGhlcm1lamNnb2lzLycgfSxcbiAgICB7IGNsYXNzTmFtZTogJ2xpbmtlZGluJywgbGluazogJ2h0dHBzOi8vd3d3LmxpbmtlZGluLmNvbS9jb21wYW55L2d1aWxoZXJtZWpjZ29pcy8nIH1cbl07XG5cbnB1Z19odG1sID0gcHVnX2h0bWwgKyBcIlxcdTAwM0Nmb290ZXJcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwiY3JlZGl0c1xcXCJcXHUwMDNFQmFzZWQgb24gYSBjb2RlcGVuIGJ5IFxcdTAwM0NhIGhyZWY9XFxcImh0dHBzOlxcdTAwMkZcXHUwMDJGY29kZXBlbi5pb1xcdTAwMkZva25vYmxpY2hcXHUwMDJGZGV0YWlsc1xcdTAwMkZqZkpteVxcXCJcXHUwMDNFT2xpdmVyIEtub2JsaWNoXFx1MDAzQ1xcdTAwMkZhXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcInNvY2lhbFxcXCJcXHUwMDNFXFx1MDAzQ3VsXFx1MDAzRVwiO1xuLy8gaXRlcmF0ZSBzb2NpYWxcbjsoZnVuY3Rpb24oKXtcbiAgdmFyICQkb2JqID0gc29jaWFsO1xuICBpZiAoJ251bWJlcicgPT0gdHlwZW9mICQkb2JqLmxlbmd0aCkge1xuICAgICAgZm9yICh2YXIgcHVnX2luZGV4MCA9IDAsICQkbCA9ICQkb2JqLmxlbmd0aDsgcHVnX2luZGV4MCA8ICQkbDsgcHVnX2luZGV4MCsrKSB7XG4gICAgICAgIHZhciBpdGVtID0gJCRvYmpbcHVnX2luZGV4MF07XG5wdWdfaHRtbCA9IHB1Z19odG1sICsgXCJcXHUwMDNDbGlcIiArIChwdWcuYXR0cihcImNsYXNzXCIsIHB1Zy5jbGFzc2VzKFtpdGVtLmNsYXNzTmFtZV0sIFt0cnVlXSksIGZhbHNlLCB0cnVlKSkgKyBcIlxcdTAwM0VcXHUwMDNDYVwiICsgKHB1Zy5hdHRyKFwiaHJlZlwiLCBpdGVtLmxpbmssIHRydWUsIHRydWUpKSArIFwiXFx1MDAzRVwiICsgKHB1Zy5lc2NhcGUobnVsbCA9PSAocHVnX2ludGVycCA9IGl0ZW0ubmFtZSkgPyBcIlwiIDogcHVnX2ludGVycCkpICsgXCJcXHUwMDNDXFx1MDAyRmFcXHUwMDNFXFx1MDAzQ1xcdTAwMkZsaVxcdTAwM0VcIjtcbiAgICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgJCRsID0gMDtcbiAgICBmb3IgKHZhciBwdWdfaW5kZXgwIGluICQkb2JqKSB7XG4gICAgICAkJGwrKztcbiAgICAgIHZhciBpdGVtID0gJCRvYmpbcHVnX2luZGV4MF07XG5wdWdfaHRtbCA9IHB1Z19odG1sICsgXCJcXHUwMDNDbGlcIiArIChwdWcuYXR0cihcImNsYXNzXCIsIHB1Zy5jbGFzc2VzKFtpdGVtLmNsYXNzTmFtZV0sIFt0cnVlXSksIGZhbHNlLCB0cnVlKSkgKyBcIlxcdTAwM0VcXHUwMDNDYVwiICsgKHB1Zy5hdHRyKFwiaHJlZlwiLCBpdGVtLmxpbmssIHRydWUsIHRydWUpKSArIFwiXFx1MDAzRVwiICsgKHB1Zy5lc2NhcGUobnVsbCA9PSAocHVnX2ludGVycCA9IGl0ZW0ubmFtZSkgPyBcIlwiIDogcHVnX2ludGVycCkpICsgXCJcXHUwMDNDXFx1MDAyRmFcXHUwMDNFXFx1MDAzQ1xcdTAwMkZsaVxcdTAwM0VcIjtcbiAgICB9XG4gIH1cbn0pLmNhbGwodGhpcyk7XG5cbnB1Z19odG1sID0gcHVnX2h0bWwgKyBcIlxcdTAwM0NcXHUwMDJGdWxcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ1xcdTAwMkZmb290ZXJcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwic3plbmVcXFwiXFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImltYWdlIGFuaW1hdGVcXFwiXFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImxpbmUgYmVnaW4gaHRtbFxcXCJcXHUwMDNFXCIgKyAocHVnLmVzY2FwZShudWxsID09IChwdWdfaW50ZXJwID0gJzxIVE1MPicpID8gXCJcIiA6IHB1Z19pbnRlcnApKSArIFwiXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwibGluZSBiZWdpbiBoZWFkXFxcIlxcdTAwM0VcIiArIChwdWcuZXNjYXBlKG51bGwgPT0gKHB1Z19pbnRlcnAgPSAnPEhFQUQ+JykgPyBcIlwiIDogcHVnX2ludGVycCkpICsgXCJcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJsaW5lIHRpdGxlXFxcIlxcdTAwM0VcIiArIChwdWcuZXNjYXBlKG51bGwgPT0gKHB1Z19pbnRlcnAgPSAnPFRJVExFPkRFVkdPSVM8L1RJVExFPicpID8gXCJcIiA6IHB1Z19pbnRlcnApKSArIFwiXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwibGluZSBlbmQgaGVhZFxcXCJcXHUwMDNFXCIgKyAocHVnLmVzY2FwZShudWxsID09IChwdWdfaW50ZXJwID0gJzwvSEVBRD4nKSA/IFwiXCIgOiBwdWdfaW50ZXJwKSkgKyBcIlxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImxpbmUgYmVnaW4gYm9keVxcXCJcXHUwMDNFXCIgKyAocHVnLmVzY2FwZShudWxsID09IChwdWdfaW50ZXJwID0gJzxCT0RZPicpID8gXCJcIiA6IHB1Z19pbnRlcnApKSArIFwiXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwibGluZSBib2R5IHRleHRcXFwiXFx1MDAzRVwiICsgKHB1Zy5lc2NhcGUobnVsbCA9PSAocHVnX2ludGVycCA9ICdCdWlsZGluZy4uLicpID8gXCJcIiA6IHB1Z19pbnRlcnApKSArIFwiXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwibGluZSBlbmQgYm9keVxcXCJcXHUwMDNFXCIgKyAocHVnLmVzY2FwZShudWxsID09IChwdWdfaW50ZXJwID0gJzwvQk9EWT4nKSA/IFwiXCIgOiBwdWdfaW50ZXJwKSkgKyBcIlxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImxpbmUgZW5kIGh0bWxcXFwiXFx1MDAzRVwiICsgKHB1Zy5lc2NhcGUobnVsbCA9PSAocHVnX2ludGVycCA9ICc8L0hUTUw+JykgPyBcIlwiIDogcHVnX2ludGVycCkpICsgXCJcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJwZW9wbGUgaGVhZFxcXCJcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwiZXllcyBhbmltYXRlXFxcIlxcdTAwM0VcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJwZW9wbGUgYm9keVxcXCJcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwicmlnaHQtYXJtIHdhdmVcXFwiXFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcInNsZWV2ZVxcXCJcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwidGFibGVcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImxhcHRvcFxcXCJcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwibW91c2VcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcIm5vdGVzXFxcIlxcdTAwM0VcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJsYW1wXFxcIlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJ0b3BcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcImhlYWRwaG9uZXNcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcInRyYXNoXFxcIlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJwYXBlciBwMVxcXCJcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ2RpdiBjbGFzcz1cXFwicGFwZXIgcDJcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVxcdTAwM0NkaXYgY2xhc3M9XFxcInBhcGVyIHAzXFxcIlxcdTAwM0VcXHUwMDNDXFx1MDAyRmRpdlxcdTAwM0VcXHUwMDNDZGl2IGNsYXNzPVxcXCJwYXBlciBwNFxcXCJcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQ1xcdTAwMkZkaXZcXHUwMDNFXFx1MDAzQyEtLVxcdTAwM0NzY3JpcHQgc3JjPVxcXCJqc1xcdTAwMkZ1bmRlci1jb25zdHJ1Y3Rpb24uanNcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGc2NyaXB0XFx1MDAzRS0tXFx1MDAzRVxcdTAwM0NcXHUwMDJGZGl2XFx1MDAzRVwiOztyZXR1cm4gcHVnX2h0bWw7fTtcbm1vZHVsZS5leHBvcnRzID0gdGVtcGxhdGU7IiwidmFyIHB1ZyA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3B1Zy1ydW50aW1lL2luZGV4LmpzXCIpO1xuXG5mdW5jdGlvbiB0ZW1wbGF0ZShsb2NhbHMpIHt2YXIgcHVnX2h0bWwgPSBcIlwiLCBwdWdfbWl4aW5zID0ge30sIHB1Z19pbnRlcnA7cHVnX2h0bWwgPSBwdWdfaHRtbCArIFwiXFx1MDAzQ2hlYWRcXHUwMDNFXFx1MDAzQ21ldGEgY2hhclNldD1cXFwiVVRGLThcXFwiXFx1MDAzRVxcdTAwM0NtZXRhIGh0dHAtZXF1aXY9XFxcIlgtVUEtQ29tcGF0aWJsZVxcXCIgY29udGVudD1cXFwiSUU9ZWRnZSxjaHJvbWU9MVxcXCJcXHUwMDNFXFx1MDAzQ3RpdGxlXFx1MDAzRURFVkdPSVNcXHUwMDNDXFx1MDAyRnRpdGxlXFx1MDAzRVxcdTAwM0NtZXRhIG5hbWU9XFxcImRlc2NyaXB0aW9uXFxcIiBjb250ZW50PVxcXCJcXFwiXFx1MDAzRVxcdTAwM0NtZXRhIG5hbWU9XFxcInZpZXdwb3J0XFxcIiBjb250ZW50PVxcXCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MVxcXCJcXHUwMDNFXFx1MDAzQ2xpbmsgcmVsPVxcXCJhcHBsZS10b3VjaC1pY29uXFxcIiBocmVmPVxcXCJhcHBsZS10b3VjaC1pY29uLnBuZ1xcXCJcXHUwMDNFXFx1MDAzQ2xpbmsgcmVsPVxcXCJzdHlsZXNoZWV0XFxcIiBocmVmPVxcXCJzdHlsZXNcXHUwMDJGbm9ybWFsaXplLm1pbi5jc3NcXFwiXFx1MDAzRVxcdTAwM0NsaW5rIHJlbD1cXFwic3R5bGVzaGVldFxcXCIgaHJlZj1cXFwic3R5bGVzXFx1MDAyRm1haW4uY3NzXFxcIlxcdTAwM0VcXHUwMDNDc2NyaXB0IHNyYz1cXFwianNcXHUwMDJGdmVuZG9yXFx1MDAyRm1vZGVybml6ci0yLjguMy1yZXNwb25kLTEuNC4yLm1pbi5qc1xcXCJcXHUwMDNFXFx1MDAzQ1xcdTAwMkZzY3JpcHRcXHUwMDNFXFx1MDAzQ1xcdTAwMkZoZWFkXFx1MDAzRVwiOztyZXR1cm4gcHVnX2h0bWw7fTtcbm1vZHVsZS5leHBvcnRzID0gdGVtcGxhdGU7IiwidmFyIHB1ZyA9IHJlcXVpcmUoXCIhLi4vbm9kZV9tb2R1bGVzL3B1Zy1ydW50aW1lL2luZGV4LmpzXCIpO1xuXG5mdW5jdGlvbiB0ZW1wbGF0ZShsb2NhbHMpIHt2YXIgcHVnX2h0bWwgPSBcIlwiLCBwdWdfbWl4aW5zID0ge30sIHB1Z19pbnRlcnA7cHVnX2h0bWwgPSBwdWdfaHRtbCArIFwiXFx1MDAzQyFET0NUWVBFIGh0bWxcXHUwMDNFXFx1MDAzQyEtLVtpZiBsdCBJRSA3XVxcdTAwM0VcXHUwMDNDaHRtbCBjbGFzcz1cXFwibm8tanMgbHQtaWU5IGx0LWllOCBsdC1pZTdcXFwiIGxhbmc9XFxcIlxcXCJcXHUwMDNFIFxcdTAwM0MhW2VuZGlmXS0tXFx1MDAzRVxcblxcdTAwM0MhLS1baWYgSUUgN11cXHUwMDNFXFx1MDAzQ2h0bWwgY2xhc3M9XFxcIm5vLWpzIGx0LWllOSBsdC1pZThcXFwiIGxhbmc9XFxcIlxcXCJcXHUwMDNFIFxcdTAwM0MhW2VuZGlmXS0tXFx1MDAzRVxcblxcdTAwM0MhLS1baWYgSUUgOF1cXHUwMDNFXFx1MDAzQ2h0bWwgY2xhc3M9XFxcIm5vLWpzIGx0LWllOVxcXCIgbGFuZz1cXFwiXFxcIlxcdTAwM0UgXFx1MDAzQyFbZW5kaWZdLS1cXHUwMDNFXFxuXFx1MDAzQyEtLVtpZiBndCBJRSA4XVxcdTAwM0VcXHUwMDNDIS0tXFx1MDAzRVxcdTAwM0NodG1sIGNsYXNzPVxcXCJuby1qc1xcXCIgbGFuZz1cXFwicHQtYnJcXFwiXFx1MDAzRVxcdTAwM0MhLS1cXHUwMDNDIVtlbmRpZl0tLVxcdTAwM0VcIiArIChudWxsID09IChwdWdfaW50ZXJwID0gcmVxdWlyZShcIi4vdGVtcGxhdGVzL2hlYWQucHVnXCIpLmNhbGwodGhpcywgbG9jYWxzKSkgPyBcIlwiIDogcHVnX2ludGVycCkgKyBcIlxcdTAwM0Nib2R5XFx1MDAzRVxcdTAwM0MhLS1baWYgbHQgSUUgOF1cXHUwMDNFXFx1MDAzQ3AgY2xhc3M9XFxcImJyb3dzZXJ1cGdyYWRlXFxcIlxcdTAwM0VZb3UgYXJlIHVzaW5nIGFuIFxcdTAwM0NzdHJvbmdcXHUwMDNFb3V0ZGF0ZWRcXHUwMDNDXFx1MDAyRnN0cm9uZ1xcdTAwM0UgYnJvd3Nlci4gUGxlYXNlIFxcdTAwM0NhIGhyZWY9XFxcImh0dHA6XFx1MDAyRlxcdTAwMkZicm93c2VoYXBweS5jb21cXHUwMDJGXFxcIlxcdTAwM0V1cGdyYWRlIHlvdXIgYnJvd3NlclxcdTAwM0NcXHUwMDJGYVxcdTAwM0UgdG8gaW1wcm92ZSB5b3VyIGV4cGVyaWVuY2UuXFx1MDAzQ1xcdTAwMkZwXFx1MDAzRVxcdTAwM0MhW2VuZGlmXS0tXFx1MDAzRVwiICsgKG51bGwgPT0gKHB1Z19pbnRlcnAgPSByZXF1aXJlKFwiLi90ZW1wbGF0ZXMvdW5kZXItY29uc3RydWN0aW9uLnB1Z1wiKS5jYWxsKHRoaXMsIGxvY2FscykpID8gXCJcIiA6IHB1Z19pbnRlcnApICsgXCJcXHUwMDNDIS0tXFx1MDAzQ3NjcmlwdCBzcmM9XFxcImpzXFx1MDAyRm1haW4uanNcXFwiXFx1MDAzRVxcdTAwM0NcXHUwMDJGc2NyaXB0XFx1MDAzRVxcblxcbkdvb2dsZSBBbmFseXRpY3M6IGNoYW5nZSBVQS1YWFhYWC1YIHRvIGJlIHlvdXIgc2l0ZSdzIElELlxcblxcdTAwM0NzY3JpcHRcXHUwMDNFXFxuXFx0KGZ1bmN0aW9uKGIsIG8sIGksIGwsIGUsIHIpIHtcXG5cXHRcXHRiLkdvb2dsZUFuYWx5dGljc09iamVjdCA9IGw7XFxuXFx0XFx0YltsXSB8fCAoYltsXSA9XFxuXFx0XFx0XFx0ZnVuY3Rpb24oKSB7XFxuXFx0XFx0XFx0XFx0KGJbbF0ucSA9IGJbbF0ucSB8fCBbXSkucHVzaChhcmd1bWVudHMpXFxuXFx0XFx0XFx0fSk7XFxuXFx0XFx0YltsXS5sID0gK25ldyBEYXRlO1xcblxcdFxcdGUgPSBvLmNyZWF0ZUVsZW1lbnQoaSk7XFxuXFx0XFx0ciA9IG8uZ2V0RWxlbWVudHNCeVRhZ05hbWUoaSlbMF07XFxuXFx0XFx0ZS5zcmMgPSAnXFx1MDAyRlxcdTAwMkZ3d3cuZ29vZ2xlLWFuYWx5dGljcy5jb21cXHUwMDJGYW5hbHl0aWNzLmpzJztcXG5cXHRcXHRyLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKGUsIHIpXFxuXFx0fSh3aW5kb3csIGRvY3VtZW50LCAnc2NyaXB0JywgJ2dhJykpO1xcblxcdGdhKCdjcmVhdGUnLCAnVUEtWFhYWFgtWCcsICdhdXRvJyk7XFxuXFx0Z2EoJ3NlbmQnLCAncGFnZXZpZXcnKTtcXG5cXHUwMDNDXFx1MDAyRnNjcmlwdFxcdTAwM0UtLVxcdTAwM0VcXHUwMDNDXFx1MDAyRmJvZHlcXHUwMDNFXCI7O3JldHVybiBwdWdfaHRtbDt9O1xubW9kdWxlLmV4cG9ydHMgPSB0ZW1wbGF0ZTsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI2ZjEyY2M1Mjg3MTMzNmYzYTY5ZjA5ZWQzZmU4OGQ3ZC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI2OGJkMTc1MzhiYjk0ZDIwZThmMTY3ZDRhYmMxMmU4Ni5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI4OWZjZjZjNjBmOWJkYzQ5YWEyNWJiZTk5NzY0MjM3MS5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI4OWRhNzA5M2JkNzljNGRiYTcwYTRkYjc0Yzc2MTBiMC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJlOWVlZDRmYTcwNmFhZTlmZmNkYTM5OTlkOTA5N2IzOS5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCIyODNjZDY0OTQ2Nzc4ZWUyYmJmMGUxOGY2NTNlZmUzOS5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCI4MDk1YzdjZDNiMDliNmM2NTIzMGIzYjlkMjBhMGU3ZC5zdmdcIjsiLCJtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIGVzY2FwZSh1cmwpIHtcbiAgICBpZiAodHlwZW9mIHVybCAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgcmV0dXJuIHVybFxuICAgIH1cbiAgICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgICBpZiAoL15bJ1wiXS4qWydcIl0kLy50ZXN0KHVybCkpIHtcbiAgICAgICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgICB9XG4gICAgLy8gU2hvdWxkIHVybCBiZSB3cmFwcGVkP1xuICAgIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gICAgaWYgKC9bXCInKCkgXFx0XFxuXS8udGVzdCh1cmwpKSB7XG4gICAgICAgIHJldHVybiAnXCInICsgdXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgJ1xcXFxuJykgKyAnXCInXG4gICAgfVxuXG4gICAgcmV0dXJuIHVybFxufVxuIiwidmFyIGVzY2FwZSA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvdXJsL2VzY2FwZS5qc1wiKTtcbmV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoZmFsc2UpO1xuLy8gaW1wb3J0c1xuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiQGltcG9ydCB1cmwoaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bytNb25vOjQwMCwxMDAsNTAwLDMwMGl0YWxpYyw1MDBpdGFsaWMsNzAwaXRhbGljLDkwMCwzMDApO1wiLCBcIlwiXSk7XG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiKiB7XFxuICBtYXJnaW46IDA7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgfVxcblxcbio6YmVmb3JlLCAqOmFmdGVyIHtcXG4gIGNvbnRlbnQ6ICcnO1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3gtc2l6aW5nOiBib3JkZXItYm94OyB9XFxuXFxuaHRtbCwgYm9keSB7XFxuICBoZWlnaHQ6IDEwMHZoOyB9XFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kOiAjZDkzOyB9XFxuXFxuLnN6ZW5lIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDUwJTtcXG4gIGJvdHRvbTogNDBweDtcXG4gIHdpZHRoOiA4MDBweDtcXG4gIGhlaWdodDogNDAwcHg7XFxuICBtYXJnaW4tbGVmdDogLTQwMHB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcblxcbi5zemVuZSBkaXYge1xcbiAgcG9zaXRpb246IGFic29sdXRlOyB9XFxuXFxuLmltYWdlIHtcXG4gIHRvcDogMzBweDtcXG4gIGxlZnQ6IDEwMHB4O1xcbiAgd2lkdGg6IDQ2MHB4O1xcbiAgaGVpZ2h0OiAyMDBweDtcXG4gIGZvbnQtZmFtaWx5OiAnUm9ib3RvIE1vbm8nLCBtb25vc3BhY2U7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICBmb250LXdlaWdodDogNzAwO1xcbiAgbGluZS1oZWlnaHQ6IDEuNHJlbTtcXG4gIGNvbG9yOiAjODg4O1xcbiAgYm9yZGVyOiA4cHggc29saWQgIzQ0NDtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XFxuICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCg4LCAxZnIpOyB9XFxuXFxuLmltYWdlOm5vdCguYW5pbWF0ZSkgLmxpbmUge1xcbiAgZGlzcGxheTogbm9uZTsgfVxcblxcbi5saW5lIHtcXG4gIGdyaWQtY29sdW1uOiAxO1xcbiAgbWFyZ2luLWxlZnQ6IDhweDsgfVxcblxcbi5saW5lLmh0bWwge1xcbiAgcGFkZGluZy1sZWZ0OiAwOyB9XFxuXFxuLmxpbmUuaGVhZCB7XFxuICBwYWRkaW5nLWxlZnQ6IDExcHg7IH1cXG5cXG4ubGluZS50aXRsZSB7XFxuICBwYWRkaW5nLWxlZnQ6IDIycHg7IH1cXG5cXG4ubGluZS5ib2R5IHtcXG4gIHBhZGRpbmctbGVmdDogMTFweDsgfVxcblxcbi5saW5lLmJvZHkudGV4dCB7XFxuICBwYWRkaW5nLWxlZnQ6IDIycHg7IH1cXG5cXG5Aa2V5ZnJhbWVzIGNhcmV0IHtcXG4gIGZyb20ge1xcbiAgICBib3JkZXItcmlnaHQ6IHRyYW5zcGFyZW50OyB9XFxuICB0byB7XFxuICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC43NSk7IH0gfVxcblxcbi5hbmltYXRlLWNhcmV0IHtcXG4gIGFuaW1hdGlvbjogY2FyZXQgMTAwMG1zIGluZmluaXRlOyB9XFxuXFxuLmFuaW1hdGUgLmxpbmUuYmVnaW4uaHRtbCB7XFxuICBncmlkLXJvdzogMTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBhbmltYXRpb246IHR5cGUtaHRtbCA0cyBzdGVwcyg2KSAwLjY2NjY3cyAxIG5vcm1hbCBib3RoLCBjYXJldCAwLjY2NjY3cyBzdGVwcygyKSAwLjY2NjY3cyA2OyB9XFxuXFxuQGtleWZyYW1lcyB0eXBlLWh0bWwge1xcbiAgZnJvbSB7XFxuICAgIHdpZHRoOiAwOyB9XFxuICB0byB7XFxuICAgIHdpZHRoOiA2NnB4OyB9IH1cXG5cXG4uYW5pbWF0ZSAubGluZS5iZWdpbi5oZWFkIHtcXG4gIGdyaWQtcm93OiAyO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGFuaW1hdGlvbjogdHlwZS1oZWFkIDRzIHN0ZXBzKDcpIDUuMzMzMzNzIDEgbm9ybWFsIGJvdGgsIGNhcmV0IDAuNjY2NjdzIHN0ZXBzKDIpIDUuMzMzMzNzIDEyOyB9XFxuXFxuQGtleWZyYW1lcyB0eXBlLWhlYWQge1xcbiAgZnJvbSB7XFxuICAgIHdpZHRoOiAwOyB9XFxuICB0byB7XFxuICAgIHdpZHRoOiA3N3B4OyB9IH1cXG5cXG4uYW5pbWF0ZSAubGluZS50aXRsZSB7XFxuICBncmlkLXJvdzogMztcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBhbmltYXRpb246IHR5cGUtdGl0bGUgMTQuNjY2NjdzIHN0ZXBzKDI0KSAxM3MgMSBub3JtYWwgYm90aCwgY2FyZXQgMC42NjY2N3Mgc3RlcHMoMikgMTNzIDIzOyB9XFxuXFxuQGtleWZyYW1lcyB0eXBlLXRpdGxlIHtcXG4gIGZyb20ge1xcbiAgICB3aWR0aDogMDsgfVxcbiAgdG8ge1xcbiAgICB3aWR0aDogMjY0cHg7IH0gfVxcblxcbi5hbmltYXRlIC5saW5lLmVuZC5oZWFkIHtcXG4gIGdyaWQtcm93OiA0O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGFuaW1hdGlvbjogdHlwZS1oZWFkLWVuZCA0LjY2NjY3cyBzdGVwcyg4KSAyOC4zMzMzM3MgMSBub3JtYWwgYm90aCwgY2FyZXQgMC42NjY2N3Mgc3RlcHMoMikgMjguMzMzMzNzIDg7IH1cXG5cXG5Aa2V5ZnJhbWVzIHR5cGUtaGVhZC1lbmQge1xcbiAgZnJvbSB7XFxuICAgIHdpZHRoOiAwOyB9XFxuICB0byB7XFxuICAgIHdpZHRoOiA4OHB4OyB9IH1cXG5cXG4uYW5pbWF0ZSAubGluZS5iZWdpbi5ib2R5IHtcXG4gIGdyaWQtcm93OiA1O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGFuaW1hdGlvbjogdHlwZS1ib2R5IDRzIHN0ZXBzKDcpIDMzLjY2NjY3cyAxIG5vcm1hbCBib3RoLCBjYXJldCAwLjY2NjY3cyBzdGVwcygyKSAzMy42NjY2N3MgNzsgfVxcblxcbkBrZXlmcmFtZXMgdHlwZS1ib2R5IHtcXG4gIGZyb20ge1xcbiAgICB3aWR0aDogMDsgfVxcbiAgdG8ge1xcbiAgICB3aWR0aDogNzdweDsgfSB9XFxuXFxuLmFuaW1hdGUgLmxpbmUuYm9keS50ZXh0IHtcXG4gIGdyaWQtcm93OiA2O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGFuaW1hdGlvbjogdHlwZS1ib2R5LXRleHQgNy4zMzMzM3Mgc3RlcHMoMTMpIDM4LjMzMzMzcyAxIG5vcm1hbCBib3RoLCBjYXJldCAwLjY2NjY3cyBzdGVwcygyKSAzOC4zMzMzM3MgMTI7IH1cXG5cXG5Aa2V5ZnJhbWVzIHR5cGUtYm9keS10ZXh0IHtcXG4gIGZyb20ge1xcbiAgICB3aWR0aDogMDsgfVxcbiAgdG8ge1xcbiAgICB3aWR0aDogMTQzcHg7IH0gfVxcblxcbi5hbmltYXRlIC5saW5lLmVuZC5ib2R5IHtcXG4gIGdyaWQtcm93OiA3O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGFuaW1hdGlvbjogdHlwZS1ib2R5LWVuZCA0LjY2NjY3cyBzdGVwcyg4KSA0Ni4zMzMzM3MgMSBub3JtYWwgYm90aCwgY2FyZXQgMC42NjY2N3Mgc3RlcHMoMikgNDYuMzMzMzNzIDg7IH1cXG5cXG5Aa2V5ZnJhbWVzIHR5cGUtYm9keS1lbmQge1xcbiAgZnJvbSB7XFxuICAgIHdpZHRoOiAwOyB9XFxuICB0byB7XFxuICAgIHdpZHRoOiA4OHB4OyB9IH1cXG5cXG4uYW5pbWF0ZSAubGluZS5lbmQuaHRtbCB7XFxuICBncmlkLXJvdzogODtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBhbmltYXRpb246IHR5cGUtaHRtbC1lbmQgNHMgc3RlcHMoOCkgNTEuNjY2NjdzIDEgbm9ybWFsIGJvdGgsIGNhcmV0IDAuNjY2NjdzIHN0ZXBzKDIpIDUxLjY2NjY3cyA4OyB9XFxuXFxuQGtleWZyYW1lcyB0eXBlLWh0bWwtZW5kIHtcXG4gIGZyb20ge1xcbiAgICB3aWR0aDogMDsgfVxcbiAgdG8ge1xcbiAgICB3aWR0aDogODhweDsgfSB9XFxuXFxuLnBlb3BsZS5oZWFkIHtcXG4gIGJvdHRvbTogOTBweDtcXG4gIGxlZnQ6IDU3NXB4O1xcbiAgd2lkdGg6IDg1cHg7XFxuICBoZWlnaHQ6IDg1cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiAjZWVlOyB9XFxuXFxuLnBlb3BsZS5oZWFkIC5leWVzIHtcXG4gIHRvcDogNThweDtcXG4gIGxlZnQ6IDMwcHg7XFxuICB3aWR0aDogNnB4O1xcbiAgaGVpZ2h0OiA2cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiAjNDQ0O1xcbiAgYm94LXNoYWRvdzogMjBweCAwIDAgIzQ0NDsgfVxcblxcbi5leWVzLmFuaW1hdGUge1xcbiAgYW5pbWF0aW9uOiAxMHMgZXllcyBlYXNlIDZzOyB9XFxuXFxuQGtleWZyYW1lcyBleWVzIHtcXG4gIDAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAwLCAwKTsgfVxcbiAgMTAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMThweCwgMCk7IH1cXG4gIDIwJSB7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMCwgLTE5cHgsIDApOyB9XFxuICAzMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyB9XFxuICA1MCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIC0xOXB4LCAwKTsgfVxcbiAgNzAlIHtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgwLCAtMTlweCwgMCk7IH1cXG4gIDEwMCUge1xcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZTNkKDAsIDAsIDApOyB9IH1cXG5cXG4ucGVvcGxlLmJvZHkge1xcbiAgYm90dG9tOiAtMjBweDtcXG4gIGxlZnQ6IDU3OHB4O1xcbiAgd2lkdGg6IDgycHg7XFxuICBoZWlnaHQ6IDExMHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMCAwIDUwJSA1MCU7XFxuICBiYWNrZ3JvdW5kOiAjMDQ1NDkwOyB9XFxuXFxuLnBlb3BsZS5ib2R5IC5yaWdodC1hcm0ge1xcbiAgbGVmdDogODBweDtcXG4gIGhlaWdodDogMTBweDtcXG4gIGJhY2tncm91bmQ6ICNlZWU7XFxuICBib3gtc2hhZG93OiAyMHB4IDAgMCAjZWVlO1xcbiAgei1pbmRleDogMTsgfVxcblxcbi5wZW9wbGUuYm9keSAucmlnaHQtYXJtIC5zbGVldmUge1xcbiAgaGVpZ2h0OiAxMDAlO1xcbiAgd2lkdGg6IDEwMCU7XFxuICBiYWNrZ3JvdW5kOiAjMzM5NEREOyB9XFxuXFxuLndhdmUge1xcbiAgdHJhbnNmb3JtLW9yaWdpbjogbGVmdCBjZW50ZXI7XFxuICBhbmltYXRpb246IDNzIHdhdmUgZWFzZSAxMXM7IH1cXG5cXG5Aa2V5ZnJhbWVzIHdhdmUge1xcbiAgMCUge1xcbiAgICB3aWR0aDogMCU7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XFxuICAxMCUge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTQ1ZGVnKTsgfVxcbiAgMzAlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKC05MGRlZyk7IH1cXG4gIDUwJSB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDVkZWcpOyB9XFxuICA3MCUge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgdHJhbnNmb3JtOiByb3RhdGUoLTkwZGVnKTsgfVxcbiAgOTAlIHtcXG4gICAgd2lkdGg6IDEwMCU7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKC00NWRlZyk7IH1cXG4gIDEwMCUge1xcbiAgICB3aWR0aDogMCU7XFxuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9IH1cXG5cXG4udGFibGUge1xcbiAgYm90dG9tOiAxNXB4O1xcbiAgbGVmdDogMjgwcHg7XFxuICB3aWR0aDogNTAwcHg7XFxuICBoZWlnaHQ6IDE1cHg7XFxuICBiYWNrZ3JvdW5kOiAjNDQ0OyB9XFxuXFxuLnRhYmxlOmJlZm9yZSxcXG4udGFibGU6YWZ0ZXIge1xcbiAgdG9wOiAxNXB4O1xcbiAgd2lkdGg6IDEwcHg7XFxuICBoZWlnaHQ6IDIwcHg7XFxuICBib3JkZXItdG9wOiAzcHggc29saWQgI2FhYTtcXG4gIGJhY2tncm91bmQ6ICNlZWU7IH1cXG5cXG4udGFibGU6YmVmb3JlIHtcXG4gIGxlZnQ6IDIwcHg7IH1cXG5cXG4udGFibGU6YWZ0ZXIge1xcbiAgcmlnaHQ6IDIwcHg7IH1cXG5cXG4ubGFwdG9wIHtcXG4gIGJvdHRvbTogMzVweDtcXG4gIGxlZnQ6IDU1MHB4O1xcbiAgd2lkdGg6IDE0MHB4O1xcbiAgaGVpZ2h0OiA3MHB4O1xcbiAgYm9yZGVyLXJhZGl1czogMnB4IDJweCAwIDA7XFxuICBiYWNrZ3JvdW5kOiAjZGRkO1xcbiAgei1pbmRleDogMjsgfVxcblxcbi5sYXB0b3A6YmVmb3JlIHtcXG4gIHRvcDogNTAlO1xcbiAgbGVmdDogNTAlO1xcbiAgd2lkdGg6IDE4cHg7XFxuICBoZWlnaHQ6IDE4cHg7XFxuICBtYXJnaW46IC05cHggMCAwIC05cHg7XFxuICBib3JkZXItcmFkaXVzOiA1MCU7XFxuICBiYWNrZ3JvdW5kOiAjZmZmOyB9XFxuXFxuLmxhcHRvcDphZnRlciB7XFxuICB0b3A6IDcwcHg7XFxuICBsZWZ0OiAtNXB4O1xcbiAgd2lkdGg6IDE1MHB4O1xcbiAgaGVpZ2h0OiA1cHg7XFxuICBib3JkZXItcmFkaXVzOiAycHggMnB4IDAgMDtcXG4gIGJhY2tncm91bmQ6ICM4ODg7IH1cXG5cXG4ubW91c2Uge1xcbiAgYm90dG9tOiAzMHB4O1xcbiAgbGVmdDogNTEwcHg7XFxuICB3aWR0aDogMjBweDtcXG4gIGhlaWdodDogNnB4O1xcbiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICM4ODg7XFxuICBib3JkZXItcmFkaXVzOiAyNSU7XFxuICBiYWNrZ3JvdW5kOiAjZGRkOyB9XFxuXFxuLm5vdGVzIHtcXG4gIGJvdHRvbTogMzBweDtcXG4gIGxlZnQ6IDcwNXB4O1xcbiAgd2lkdGg6IDYwcHg7XFxuICBoZWlnaHQ6IDEycHg7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgYm9yZGVyOiA0cHggc29saWQgIzIyMjtcXG4gIGJvcmRlci1yYWRpdXM6IDRweDtcXG4gIGJvcmRlci1sZWZ0OiAwOyB9XFxuXFxuLmxhbXAge1xcbiAgYm90dG9tOiAzMHB4O1xcbiAgbGVmdDogNDEwcHg7XFxuICB3aWR0aDogNDBweDtcXG4gIGhlaWdodDogMjBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDgwcHggODBweCAwIDA7XFxuICBiYWNrZ3JvdW5kOiAjZWVlOyB9XFxuXFxuLmxhbXA6YmVmb3JlLFxcbi5sYW1wOmFmdGVyIHtcXG4gIHotaW5kZXg6IC0xO1xcbiAgd2lkdGg6IDZweDtcXG4gIGhlaWdodDogODBweDtcXG4gIGJhY2tncm91bmQ6ICNjY2M7IH1cXG5cXG4ubGFtcDpiZWZvcmUge1xcbiAgdG9wOiAtNzBweDtcXG4gIGxlZnQ6IDhweDtcXG4gIHRyYW5zZm9ybTogcm90YXRlKC0xNWRlZyk7IH1cXG5cXG4ubGFtcDphZnRlciB7XFxuICB0b3A6IC0xMDhweDtcXG4gIGxlZnQ6IDMwcHg7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSg3NWRlZyk7IH1cXG5cXG4ubGFtcCAudG9wIHtcXG4gIHRvcDogLTc1cHg7XFxuICBsZWZ0OiA0NXB4O1xcbiAgd2lkdGg6IDUwcHg7XFxuICBoZWlnaHQ6IDI1cHg7XFxuICBib3JkZXItcmFkaXVzOiAxMDBweCAxMDBweCAwIDA7XFxuICBiYWNrZ3JvdW5kOiAjZWVlO1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTE1ZGVnKTsgfVxcblxcbi5oZWFkcGhvbmVzIHtcXG4gIGJvdHRvbTogODVweDtcXG4gIGxlZnQ6IDU2M3B4O1xcbiAgd2lkdGg6IDExMHB4O1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcXG4gIGJvcmRlci10b3A6IDEwcHggc29saWQgIzQ0NDsgfVxcblxcbi5oZWFkcGhvbmVzOmJlZm9yZSxcXG4uaGVhZHBob25lczphZnRlciB7XFxuICB3aWR0aDogMjBweDtcXG4gIGhlaWdodDogNDBweDtcXG4gIHRvcDogMjBweDtcXG4gIGJhY2tncm91bmQ6ICNGRkJCNTQ7IH1cXG5cXG4uaGVhZHBob25lczpiZWZvcmUge1xcbiAgbGVmdDogLThweDtcXG4gIGJvcmRlci1yYWRpdXM6IDgwcHggMCAwIDgwcHg7XFxuICBib3JkZXItcmlnaHQ6IDNweCBzb2xpZCAjNDQ0OyB9XFxuXFxuLmhlYWRwaG9uZXM6YWZ0ZXIge1xcbiAgcmlnaHQ6IC03cHg7XFxuICBib3JkZXItcmFkaXVzOiAwIDgwcHggODBweCAwO1xcbiAgYm9yZGVyLWxlZnQ6IDNweCBzb2xpZCAjNDQ0OyB9XFxuXFxuLnRyYXNoIHtcXG4gIGJvdHRvbTogMTBweDtcXG4gIGxlZnQ6IDIwcHg7XFxuICB3aWR0aDogMTAwcHg7XFxuICBoZWlnaHQ6IDhweDtcXG4gIGJhY2tncm91bmQ6ICM0NDQ7IH1cXG5cXG4udHJhc2g6YWZ0ZXIge1xcbiAgdG9wOiA4cHg7XFxuICBsZWZ0OiAzcHg7XFxuICB3aWR0aDogOTRweDtcXG4gIGhlaWdodDogMjVweDtcXG4gIGJvcmRlci1yYWRpdXM6IDAgMCA1MHB4IDUwcHg7XFxuICBiYWNrZ3JvdW5kOiAjNTU1OyB9XFxuXFxuLnRyYXNoIC5wYXBlciB7XFxuICB6LWluZGV4OiAtMTtcXG4gIHdpZHRoOiAyNXB4O1xcbiAgaGVpZ2h0OiA1MHB4O1xcbiAgYm9yZGVyOiAycHggc29saWQgIzU1NTtcXG4gIGJhY2tncm91bmQ6ICNkZGQ7IH1cXG5cXG4udHJhc2ggLnBhcGVyLnAxIHtcXG4gIHRvcDogLTE1cHg7XFxuICBsZWZ0OiAxMHB4O1xcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTIwZGVnKTsgfVxcblxcbi50cmFzaCAucGFwZXIucDIge1xcbiAgdG9wOiAtMTJweDtcXG4gIGxlZnQ6IDMwcHg7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSgtNDBkZWcpOyB9XFxuXFxuLnRyYXNoIC5wYXBlci5wMyB7XFxuICB0b3A6IC0xNXB4O1xcbiAgbGVmdDogNjBweDtcXG4gIHRyYW5zZm9ybTogcm90YXRlKDEwZGVnKTsgfVxcblxcbi50cmFzaCAucGFwZXIucDQge1xcbiAgdG9wOiAtMTJweDtcXG4gIGxlZnQ6IDMwcHg7XFxuICB0cmFuc2Zvcm06IHJvdGF0ZSg2NWRlZyk7IH1cXG5cXG5mb290ZXIge1xcbiAgYmFja2dyb3VuZDogIzRkNGQ0ZDtcXG4gIGJvdHRvbTogMDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGZsZXgtZGlyZWN0aW9uOiByb3c7XFxuICBmb250LWZhbWlseTogJ1JvYm90byBNb25vJywgbW9ub3NwYWNlO1xcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgaGVpZ2h0OiA0MHB4O1xcbiAgbGVmdDogMDtcXG4gIG1hcmdpbi10b3A6IC00MHB4O1xcbiAgcGFkZGluZzogMCAxMHB4O1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgd2lkdGg6IDEwMHZ3OyB9XFxuICBmb290ZXIgLmNyZWRpdHMge1xcbiAgICBsaW5lLWhlaWdodDogMS41O1xcbiAgICBwYWRkaW5nLXRvcDogM3B4OyB9XFxuICBmb290ZXIgLmNyZWRpdHMgYSB7XFxuICAgIGNvbG9yOiAjMDA5QUVFOyB9XFxuICBmb290ZXIgLnNvY2lhbCB1bCB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtY29sdW1uLWdhcDogMTJweDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNywgMWZyKTtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiAxZnI7IH1cXG5cXG4uc29jaWFsIHVsIHtcXG4gIGhlaWdodDogMTAwJTtcXG4gIGxpc3Qtc3R5bGU6IG5vbmU7IH1cXG4gIC5zb2NpYWwgdWwgbGkge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxcbiAgLnNvY2lhbCB1bCBhIHtcXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcXG4gICAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xcbiAgICBkaXNwbGF5OiBibG9jaztcXG4gICAgaGVpZ2h0OiAyMHB4O1xcbiAgICB3aWR0aDogMjBweDsgfVxcblxcbi5jb2RlcGVuIGEge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi9hc3NldHMvc29jaWFsL2NvZGVwZW4uc3ZnXCIpKSArIFwiKTsgfVxcblxcbi5mYWNlYm9vayBhIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi4vYXNzZXRzL3NvY2lhbC9mYWNlYm9vay5zdmdcIikpICsgXCIpOyB9XFxuXFxuLmdpdGh1YiBhIHtcXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybChcIiArIGVzY2FwZShyZXF1aXJlKFwiLi4vYXNzZXRzL3NvY2lhbC9naXRodWIuc3ZnXCIpKSArIFwiKTsgfVxcblxcbi5pbnN0YWdyYW0gYSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4uL2Fzc2V0cy9zb2NpYWwvaW5zdGFncmFtLnN2Z1wiKSkgKyBcIik7IH1cXG5cXG4ubGlua2VkaW4gYSB7XFxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIgKyBlc2NhcGUocmVxdWlyZShcIi4uL2Fzc2V0cy9zb2NpYWwvbGlua2VkaW4uc3ZnXCIpKSArIFwiKTsgfVxcblxcbi5tYWlsIGEge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi9hc3NldHMvc29jaWFsL21haWwuc3ZnXCIpKSArIFwiKTsgfVxcblxcbi50d2l0dGVyIGEge1xcbiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKFwiICsgZXNjYXBlKHJlcXVpcmUoXCIuLi9hc3NldHMvc29jaWFsL3R3aXR0ZXIuc3ZnXCIpKSArIFwiKTsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbiIsIlxudmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL191bmRlci1jb25zdHJ1Y3Rpb24uc2Nzc1wiKTtcblxuaWYodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG5cbnZhciB0cmFuc2Zvcm07XG52YXIgaW5zZXJ0SW50bztcblxuXG5cbnZhciBvcHRpb25zID0ge1wiaG1yXCI6dHJ1ZX1cblxub3B0aW9ucy50cmFuc2Zvcm0gPSB0cmFuc2Zvcm1cbm9wdGlvbnMuaW5zZXJ0SW50byA9IHVuZGVmaW5lZDtcblxudmFyIHVwZGF0ZSA9IHJlcXVpcmUoXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9saWIvYWRkU3R5bGVzLmpzXCIpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5pZihjb250ZW50LmxvY2FscykgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscztcblxuaWYobW9kdWxlLmhvdCkge1xuXHRtb2R1bGUuaG90LmFjY2VwdChcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanMhLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2xpYi9sb2FkZXIuanMhLi9fdW5kZXItY29uc3RydWN0aW9uLnNjc3NcIiwgZnVuY3Rpb24oKSB7XG5cdFx0dmFyIG5ld0NvbnRlbnQgPSByZXF1aXJlKFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL191bmRlci1jb25zdHJ1Y3Rpb24uc2Nzc1wiKTtcblxuXHRcdGlmKHR5cGVvZiBuZXdDb250ZW50ID09PSAnc3RyaW5nJykgbmV3Q29udGVudCA9IFtbbW9kdWxlLmlkLCBuZXdDb250ZW50LCAnJ11dO1xuXG5cdFx0dmFyIGxvY2FscyA9IChmdW5jdGlvbihhLCBiKSB7XG5cdFx0XHR2YXIga2V5LCBpZHggPSAwO1xuXG5cdFx0XHRmb3Ioa2V5IGluIGEpIHtcblx0XHRcdFx0aWYoIWIgfHwgYVtrZXldICE9PSBiW2tleV0pIHJldHVybiBmYWxzZTtcblx0XHRcdFx0aWR4Kys7XG5cdFx0XHR9XG5cblx0XHRcdGZvcihrZXkgaW4gYikgaWR4LS07XG5cblx0XHRcdHJldHVybiBpZHggPT09IDA7XG5cdFx0fShjb250ZW50LmxvY2FscywgbmV3Q29udGVudC5sb2NhbHMpKTtcblxuXHRcdGlmKCFsb2NhbHMpIHRocm93IG5ldyBFcnJvcignQWJvcnRpbmcgQ1NTIEhNUiBkdWUgdG8gY2hhbmdlZCBjc3MtbW9kdWxlcyBsb2NhbHMuJyk7XG5cblx0XHR1cGRhdGUobmV3Q29udGVudCk7XG5cdH0pO1xuXG5cdG1vZHVsZS5ob3QuZGlzcG9zZShmdW5jdGlvbigpIHsgdXBkYXRlKCk7IH0pO1xufSIsIlxuLyoqXG4gKiBXaGVuIHNvdXJjZSBtYXBzIGFyZSBlbmFibGVkLCBgc3R5bGUtbG9hZGVyYCB1c2VzIGEgbGluayBlbGVtZW50IHdpdGggYSBkYXRhLXVyaSB0b1xuICogZW1iZWQgdGhlIGNzcyBvbiB0aGUgcGFnZS4gVGhpcyBicmVha3MgYWxsIHJlbGF0aXZlIHVybHMgYmVjYXVzZSBub3cgdGhleSBhcmUgcmVsYXRpdmUgdG8gYVxuICogYnVuZGxlIGluc3RlYWQgb2YgdGhlIGN1cnJlbnQgcGFnZS5cbiAqXG4gKiBPbmUgc29sdXRpb24gaXMgdG8gb25seSB1c2UgZnVsbCB1cmxzLCBidXQgdGhhdCBtYXkgYmUgaW1wb3NzaWJsZS5cbiAqXG4gKiBJbnN0ZWFkLCB0aGlzIGZ1bmN0aW9uIFwiZml4ZXNcIiB0aGUgcmVsYXRpdmUgdXJscyB0byBiZSBhYnNvbHV0ZSBhY2NvcmRpbmcgdG8gdGhlIGN1cnJlbnQgcGFnZSBsb2NhdGlvbi5cbiAqXG4gKiBBIHJ1ZGltZW50YXJ5IHRlc3Qgc3VpdGUgaXMgbG9jYXRlZCBhdCBgdGVzdC9maXhVcmxzLmpzYCBhbmQgY2FuIGJlIHJ1biB2aWEgdGhlIGBucG0gdGVzdGAgY29tbWFuZC5cbiAqXG4gKi9cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzKSB7XG4gIC8vIGdldCBjdXJyZW50IGxvY2F0aW9uXG4gIHZhciBsb2NhdGlvbiA9IHR5cGVvZiB3aW5kb3cgIT09IFwidW5kZWZpbmVkXCIgJiYgd2luZG93LmxvY2F0aW9uO1xuXG4gIGlmICghbG9jYXRpb24pIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJmaXhVcmxzIHJlcXVpcmVzIHdpbmRvdy5sb2NhdGlvblwiKTtcbiAgfVxuXG5cdC8vIGJsYW5rIG9yIG51bGw/XG5cdGlmICghY3NzIHx8IHR5cGVvZiBjc3MgIT09IFwic3RyaW5nXCIpIHtcblx0ICByZXR1cm4gY3NzO1xuICB9XG5cbiAgdmFyIGJhc2VVcmwgPSBsb2NhdGlvbi5wcm90b2NvbCArIFwiLy9cIiArIGxvY2F0aW9uLmhvc3Q7XG4gIHZhciBjdXJyZW50RGlyID0gYmFzZVVybCArIGxvY2F0aW9uLnBhdGhuYW1lLnJlcGxhY2UoL1xcL1teXFwvXSokLywgXCIvXCIpO1xuXG5cdC8vIGNvbnZlcnQgZWFjaCB1cmwoLi4uKVxuXHQvKlxuXHRUaGlzIHJlZ3VsYXIgZXhwcmVzc2lvbiBpcyBqdXN0IGEgd2F5IHRvIHJlY3Vyc2l2ZWx5IG1hdGNoIGJyYWNrZXRzIHdpdGhpblxuXHRhIHN0cmluZy5cblxuXHQgL3VybFxccypcXCggID0gTWF0Y2ggb24gdGhlIHdvcmQgXCJ1cmxcIiB3aXRoIGFueSB3aGl0ZXNwYWNlIGFmdGVyIGl0IGFuZCB0aGVuIGEgcGFyZW5zXG5cdCAgICggID0gU3RhcnQgYSBjYXB0dXJpbmcgZ3JvdXBcblx0ICAgICAoPzogID0gU3RhcnQgYSBub24tY2FwdHVyaW5nIGdyb3VwXG5cdCAgICAgICAgIFteKShdICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgIFxcKCAgPSBNYXRjaCBhIHN0YXJ0IHBhcmVudGhlc2VzXG5cdCAgICAgICAgICAgICAoPzogID0gU3RhcnQgYW5vdGhlciBub24tY2FwdHVyaW5nIGdyb3Vwc1xuXHQgICAgICAgICAgICAgICAgIFteKShdKyAgPSBNYXRjaCBhbnl0aGluZyB0aGF0IGlzbid0IGEgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICB8ICA9IE9SXG5cdCAgICAgICAgICAgICAgICAgXFwoICA9IE1hdGNoIGEgc3RhcnQgcGFyZW50aGVzZXNcblx0ICAgICAgICAgICAgICAgICAgICAgW14pKF0qICA9IE1hdGNoIGFueXRoaW5nIHRoYXQgaXNuJ3QgYSBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgICAgIFxcKSAgPSBNYXRjaCBhIGVuZCBwYXJlbnRoZXNlc1xuXHQgICAgICAgICAgICAgKSAgPSBFbmQgR3JvdXBcbiAgICAgICAgICAgICAgKlxcKSA9IE1hdGNoIGFueXRoaW5nIGFuZCB0aGVuIGEgY2xvc2UgcGFyZW5zXG4gICAgICAgICAgKSAgPSBDbG9zZSBub24tY2FwdHVyaW5nIGdyb3VwXG4gICAgICAgICAgKiAgPSBNYXRjaCBhbnl0aGluZ1xuICAgICAgICkgID0gQ2xvc2UgY2FwdHVyaW5nIGdyb3VwXG5cdCBcXCkgID0gTWF0Y2ggYSBjbG9zZSBwYXJlbnNcblxuXHQgL2dpICA9IEdldCBhbGwgbWF0Y2hlcywgbm90IHRoZSBmaXJzdC4gIEJlIGNhc2UgaW5zZW5zaXRpdmUuXG5cdCAqL1xuXHR2YXIgZml4ZWRDc3MgPSBjc3MucmVwbGFjZSgvdXJsXFxzKlxcKCgoPzpbXikoXXxcXCgoPzpbXikoXSt8XFwoW14pKF0qXFwpKSpcXCkpKilcXCkvZ2ksIGZ1bmN0aW9uKGZ1bGxNYXRjaCwgb3JpZ1VybCkge1xuXHRcdC8vIHN0cmlwIHF1b3RlcyAoaWYgdGhleSBleGlzdClcblx0XHR2YXIgdW5xdW90ZWRPcmlnVXJsID0gb3JpZ1VybFxuXHRcdFx0LnRyaW0oKVxuXHRcdFx0LnJlcGxhY2UoL15cIiguKilcIiQvLCBmdW5jdGlvbihvLCAkMSl7IHJldHVybiAkMTsgfSlcblx0XHRcdC5yZXBsYWNlKC9eJyguKiknJC8sIGZ1bmN0aW9uKG8sICQxKXsgcmV0dXJuICQxOyB9KTtcblxuXHRcdC8vIGFscmVhZHkgYSBmdWxsIHVybD8gbm8gY2hhbmdlXG5cdFx0aWYgKC9eKCN8ZGF0YTp8aHR0cDpcXC9cXC98aHR0cHM6XFwvXFwvfGZpbGU6XFwvXFwvXFwvfFxccyokKS9pLnRlc3QodW5xdW90ZWRPcmlnVXJsKSkge1xuXHRcdCAgcmV0dXJuIGZ1bGxNYXRjaDtcblx0XHR9XG5cblx0XHQvLyBjb252ZXJ0IHRoZSB1cmwgdG8gYSBmdWxsIHVybFxuXHRcdHZhciBuZXdVcmw7XG5cblx0XHRpZiAodW5xdW90ZWRPcmlnVXJsLmluZGV4T2YoXCIvL1wiKSA9PT0gMCkge1xuXHRcdCAgXHQvL1RPRE86IHNob3VsZCB3ZSBhZGQgcHJvdG9jb2w/XG5cdFx0XHRuZXdVcmwgPSB1bnF1b3RlZE9yaWdVcmw7XG5cdFx0fSBlbHNlIGlmICh1bnF1b3RlZE9yaWdVcmwuaW5kZXhPZihcIi9cIikgPT09IDApIHtcblx0XHRcdC8vIHBhdGggc2hvdWxkIGJlIHJlbGF0aXZlIHRvIHRoZSBiYXNlIHVybFxuXHRcdFx0bmV3VXJsID0gYmFzZVVybCArIHVucXVvdGVkT3JpZ1VybDsgLy8gYWxyZWFkeSBzdGFydHMgd2l0aCAnLydcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gcGF0aCBzaG91bGQgYmUgcmVsYXRpdmUgdG8gY3VycmVudCBkaXJlY3Rvcnlcblx0XHRcdG5ld1VybCA9IGN1cnJlbnREaXIgKyB1bnF1b3RlZE9yaWdVcmwucmVwbGFjZSgvXlxcLlxcLy8sIFwiXCIpOyAvLyBTdHJpcCBsZWFkaW5nICcuLydcblx0XHR9XG5cblx0XHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIHVybCguLi4pXG5cdFx0cmV0dXJuIFwidXJsKFwiICsgSlNPTi5zdHJpbmdpZnkobmV3VXJsKSArIFwiKVwiO1xuXHR9KTtcblxuXHQvLyBzZW5kIGJhY2sgdGhlIGZpeGVkIGNzc1xuXHRyZXR1cm4gZml4ZWRDc3M7XG59O1xuIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKShmYWxzZSk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIvKiEgSFRNTDUgQm9pbGVycGxhdGUgdjUuMCB8IE1JVCBMaWNlbnNlIHwgaHR0cDovL2g1YnAuY29tLyAqL1xcbmh0bWwge1xcbiAgY29sb3I6ICMyMjI7XFxuICBmb250LXNpemU6IDFlbTtcXG4gIGxpbmUtaGVpZ2h0OiAxLjQ7IH1cXG5cXG46Oi1tb3otc2VsZWN0aW9uIHtcXG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XFxuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxcblxcbjo6c2VsZWN0aW9uIHtcXG4gIGJhY2tncm91bmQ6ICNiM2Q0ZmM7XFxuICB0ZXh0LXNoYWRvdzogbm9uZTsgfVxcblxcbmhyIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBib3JkZXI6IDA7XFxuICBib3JkZXItdG9wOiAxcHggc29saWQgI2NjYztcXG4gIG1hcmdpbjogMWVtIDA7XFxuICBwYWRkaW5nOiAwOyB9XFxuXFxuYXVkaW8sIGNhbnZhcywgaWZyYW1lLCBpbWcsIHN2ZywgdmlkZW8ge1xcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTsgfVxcblxcbmZpZWxkc2V0IHtcXG4gIGJvcmRlcjogMDtcXG4gIG1hcmdpbjogMDtcXG4gIHBhZGRpbmc6IDA7IH1cXG5cXG50ZXh0YXJlYSB7XFxuICByZXNpemU6IHZlcnRpY2FsOyB9XFxuXFxuLmJyb3dzZXJ1cGdyYWRlIHtcXG4gIG1hcmdpbjogMC4yZW0gMDtcXG4gIGJhY2tncm91bmQ6ICNjY2M7XFxuICBjb2xvcjogIzAwMDtcXG4gIHBhZGRpbmc6IDAuMmVtIDA7IH1cXG5cXG4vKiA9PT09PSBJbml0aWFsaXpyIFN0eWxlcyA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxcbiAgIEF1dGhvcjogSm9uYXRoYW4gVmVycmVjY2hpYSAtIHZlcmVraWEuY29tL2luaXRpYWxpenIvcmVzcG9uc2l2ZS10ZW1wbGF0ZVxcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuYm9keSB7XFxuICBmb250OiAxNnB4LzI2cHggSGVsdmV0aWNhLCBIZWx2ZXRpY2EgTmV1ZSwgQXJpYWw7IH1cXG5cXG4ud3JhcHBlciB7XFxuICB3aWR0aDogOTAlO1xcbiAgbWFyZ2luOiAwIDUlOyB9XFxuXFxuLyogPT09PT09PT09PT09PT09PT09PVxcbiAgICBBTEw6IE9yYW5nZSBUaGVtZVxcbiAgID09PT09PT09PT09PT09PT09PT0gKi9cXG4uaGVhZGVyLWNvbnRhaW5lciB7XFxuICBib3JkZXItYm90dG9tOiAyMHB4IHNvbGlkICNlNDRkMjY7IH1cXG5cXG4uZm9vdGVyLWNvbnRhaW5lciwgLm1haW4gYXNpZGUge1xcbiAgYm9yZGVyLXRvcDogMjBweCBzb2xpZCAjZTQ0ZDI2OyB9XFxuXFxuLmhlYWRlci1jb250YWluZXIsIC5mb290ZXItY29udGFpbmVyLCAubWFpbiBhc2lkZSB7XFxuICBiYWNrZ3JvdW5kOiAjZjE2NTI5OyB9XFxuXFxuLyogPT09PT09PT09PT09PT1cXG4gICAgTU9CSUxFOiBNZW51XFxuICAgPT09PT09PT09PT09PT0gKi9cXG5uYXYgdWwge1xcbiAgbWFyZ2luOiAwO1xcbiAgcGFkZGluZzogMDtcXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsgfVxcblxcbm5hdiBhIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG4gIHBhZGRpbmc6IDE1cHggMDtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgYmFja2dyb3VuZDogI2U0NGQyNjsgfVxcblxcbm5hdiBhOmhvdmVyLCBuYXYgYTp2aXNpdGVkIHtcXG4gIGNvbG9yOiB3aGl0ZTsgfVxcblxcbm5hdiBhOmhvdmVyIHtcXG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XFxuXFxuLyogPT09PT09PT09PT09PT1cXG4gICAgTU9CSUxFOiBNYWluXFxuICAgPT09PT09PT09PT09PT0gKi9cXG4ubWFpbiB7XFxuICBwYWRkaW5nOiAzMHB4IDA7IH1cXG5cXG4ubWFpbiBhcnRpY2xlIGgxIHtcXG4gIGZvbnQtc2l6ZTogMmVtOyB9XFxuXFxuLm1haW4gYXNpZGUge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgcGFkZGluZzogMHB4IDUlIDEwcHg7IH1cXG5cXG4uZm9vdGVyLWNvbnRhaW5lciBmb290ZXIge1xcbiAgY29sb3I6IHdoaXRlO1xcbiAgcGFkZGluZzogMjBweCAwOyB9XFxuXFxuLyogPT09PT09PT09PT09PT09XFxuICAgIEFMTDogSUUgRml4ZXNcXG4gICA9PT09PT09PT09PT09PT0gKi9cXG4uaWU3IC50aXRsZSB7XFxuICBwYWRkaW5nLXRvcDogMjBweDsgfVxcblxcbi8qID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XFxuICAgQXV0aG9yJ3MgY3VzdG9tIHN0eWxlc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4gICBNZWRpYSBRdWVyaWVzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDQ4MHB4KSB7XFxuICAvKiA9PT09PT09PT09PT09PT09PT09PVxcbiAgICBJTlRFUk1FRElBVEU6IE1lbnVcXG4gICA9PT09PT09PT09PT09PT09PT09PSAqL1xcbiAgbmF2IGEge1xcbiAgICBmbG9hdDogbGVmdDtcXG4gICAgd2lkdGg6IDI3JTtcXG4gICAgbWFyZ2luOiAwIDEuNyU7XFxuICAgIHBhZGRpbmc6IDI1cHggMiU7XFxuICAgIG1hcmdpbi1ib3R0b206IDA7IH1cXG4gIG5hdiBsaTpmaXJzdC1jaGlsZCBhIHtcXG4gICAgbWFyZ2luLWxlZnQ6IDA7IH1cXG4gIG5hdiBsaTpsYXN0LWNoaWxkIGEge1xcbiAgICBtYXJnaW4tcmlnaHQ6IDA7IH1cXG4gIC8qID09PT09PT09PT09PT09PT09PT09PT09PVxcbiAgICBJTlRFUk1FRElBVEU6IElFIEZpeGVzXFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuICBuYXYgdWwgbGkge1xcbiAgICBkaXNwbGF5OiBpbmxpbmU7IH1cXG4gIC5vbGRpZSBuYXYgYSB7XFxuICAgIG1hcmdpbjogMCAwLjclOyB9IH1cXG5cXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDc2OHB4KSB7XFxuICAvKiA9PT09PT09PT09PT09PT09PT09PVxcbiAgICBXSURFOiBDU1MzIEVmZmVjdHNcXG4gICA9PT09PT09PT09PT09PT09PT09PSAqL1xcbiAgLmhlYWRlci1jb250YWluZXIsIC5tYWluIGFzaWRlIHtcXG4gICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDVweCAxMHB4ICNhYWE7XFxuICAgIC1tb3otYm94LXNoYWRvdzogMCA1cHggMTBweCAjYWFhO1xcbiAgICBib3gtc2hhZG93OiAwIDVweCAxMHB4ICNhYWE7IH1cXG4gIC8qID09PT09PT09PT09PVxcbiAgICBXSURFOiBNZW51XFxuICAgPT09PT09PT09PT09ICovXFxuICAudGl0bGUge1xcbiAgICBmbG9hdDogbGVmdDsgfVxcbiAgbmF2IHtcXG4gICAgZmxvYXQ6IHJpZ2h0O1xcbiAgICB3aWR0aDogMzglOyB9XFxuICAvKiA9PT09PT09PT09PT1cXG4gICAgV0lERTogTWFpblxcbiAgID09PT09PT09PT09PSAqL1xcbiAgLm1haW4gYXJ0aWNsZSB7XFxuICAgIGZsb2F0OiBsZWZ0O1xcbiAgICB3aWR0aDogNTclOyB9XFxuICAubWFpbiBhc2lkZSB7XFxuICAgIGZsb2F0OiByaWdodDtcXG4gICAgd2lkdGg6IDI4JTsgfSB9XFxuXFxuQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWluLXdpZHRoOiAxMTQwcHgpIHtcXG4gIC8qID09PT09PT09PT09PT09PVxcbiAgICBNYXhpbWFsIFdpZHRoXFxuICAgPT09PT09PT09PT09PT09ICovXFxuICAud3JhcHBlciB7XFxuICAgIHdpZHRoOiAxMDI2cHg7XFxuICAgIC8qIDExNDBweCAtIDEwJSBmb3IgbWFyZ2lucyAqL1xcbiAgICBtYXJnaW46IDAgYXV0bzsgfSB9XFxuXFxuLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cXG4gICBIZWxwZXIgY2xhc3Nlc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuLmhpZGRlbiB7XFxuICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cXG5cXG4udmlzdWFsbHloaWRkZW4ge1xcbiAgYm9yZGVyOiAwO1xcbiAgY2xpcDogcmVjdCgwIDAgMCAwKTtcXG4gIGhlaWdodDogMXB4O1xcbiAgbWFyZ2luOiAtMXB4O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIHBhZGRpbmc6IDA7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICB3aWR0aDogMXB4OyB9XFxuXFxuLnZpc3VhbGx5aGlkZGVuLmZvY3VzYWJsZTphY3RpdmUsIC52aXN1YWxseWhpZGRlbi5mb2N1c2FibGU6Zm9jdXMge1xcbiAgY2xpcDogYXV0bztcXG4gIGhlaWdodDogYXV0bztcXG4gIG1hcmdpbjogMDtcXG4gIG92ZXJmbG93OiB2aXNpYmxlO1xcbiAgcG9zaXRpb246IHN0YXRpYztcXG4gIHdpZHRoOiBhdXRvOyB9XFxuXFxuLmludmlzaWJsZSB7XFxuICB2aXNpYmlsaXR5OiBoaWRkZW47IH1cXG5cXG4uY2xlYXJmaXg6YmVmb3JlLCAuY2xlYXJmaXg6YWZ0ZXIge1xcbiAgY29udGVudDogXFxcIiBcXFwiO1xcbiAgZGlzcGxheTogdGFibGU7IH1cXG5cXG4uY2xlYXJmaXg6YWZ0ZXIge1xcbiAgY2xlYXI6IGJvdGg7IH1cXG5cXG4uY2xlYXJmaXgge1xcbiAgKnpvb206IDE7IH1cXG5cXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxcbiAgIFByaW50IHN0eWxlc1xcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXFxuQG1lZGlhIHByaW50IHtcXG4gICosICo6YmVmb3JlLCAqOmFmdGVyIHtcXG4gICAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQgIWltcG9ydGFudDtcXG4gICAgY29sb3I6ICMwMDAgIWltcG9ydGFudDtcXG4gICAgYm94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xcbiAgICB0ZXh0LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50OyB9XFxuICBhLCBhOnZpc2l0ZWQge1xcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxcbiAgYVtocmVmXTphZnRlciB7XFxuICAgIGNvbnRlbnQ6IFxcXCIgKFxcXCIgYXR0cihocmVmKSBcXFwiKVxcXCI7IH1cXG4gIGFiYnJbdGl0bGVdOmFmdGVyIHtcXG4gICAgY29udGVudDogXFxcIiAoXFxcIiBhdHRyKHRpdGxlKSBcXFwiKVxcXCI7IH1cXG4gIGFbaHJlZl49XFxcIiNcXFwiXTphZnRlciwgYVtocmVmXj1cXFwiamF2YXNjcmlwdDpcXFwiXTphZnRlciB7XFxuICAgIGNvbnRlbnQ6IFxcXCJcXFwiOyB9XFxuICBwcmUsIGJsb2NrcXVvdGUge1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjOTk5O1xcbiAgICBwYWdlLWJyZWFrLWluc2lkZTogYXZvaWQ7IH1cXG4gIHRoZWFkIHtcXG4gICAgZGlzcGxheTogdGFibGUtaGVhZGVyLWdyb3VwOyB9XFxuICB0ciwgaW1nIHtcXG4gICAgcGFnZS1icmVhay1pbnNpZGU6IGF2b2lkOyB9XFxuICBpbWcge1xcbiAgICBtYXgtd2lkdGg6IDEwMCUgIWltcG9ydGFudDsgfVxcbiAgcCwgaDIsIGgzIHtcXG4gICAgb3JwaGFuczogMztcXG4gICAgd2lkb3dzOiAzOyB9XFxuICBoMiwgaDMge1xcbiAgICBwYWdlLWJyZWFrLWFmdGVyOiBhdm9pZDsgfSB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuIiwiXG52YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbWFpbi5zY3NzXCIpO1xuXG5pZih0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcblxudmFyIHRyYW5zZm9ybTtcbnZhciBpbnNlcnRJbnRvO1xuXG5cblxudmFyIG9wdGlvbnMgPSB7XCJobXJcIjp0cnVlfVxuXG5vcHRpb25zLnRyYW5zZm9ybSA9IHRyYW5zZm9ybVxub3B0aW9ucy5pbnNlcnRJbnRvID0gdW5kZWZpbmVkO1xuXG52YXIgdXBkYXRlID0gcmVxdWlyZShcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2xpYi9hZGRTdHlsZXMuanNcIikoY29udGVudCwgb3B0aW9ucyk7XG5cbmlmKGNvbnRlbnQubG9jYWxzKSBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzO1xuXG5pZihtb2R1bGUuaG90KSB7XG5cdG1vZHVsZS5ob3QuYWNjZXB0KFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcyEuLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvbGliL2xvYWRlci5qcyEuL21haW4uc2Nzc1wiLCBmdW5jdGlvbigpIHtcblx0XHR2YXIgbmV3Q29udGVudCA9IHJlcXVpcmUoXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzIS4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9saWIvbG9hZGVyLmpzIS4vbWFpbi5zY3NzXCIpO1xuXG5cdFx0aWYodHlwZW9mIG5ld0NvbnRlbnQgPT09ICdzdHJpbmcnKSBuZXdDb250ZW50ID0gW1ttb2R1bGUuaWQsIG5ld0NvbnRlbnQsICcnXV07XG5cblx0XHR2YXIgbG9jYWxzID0gKGZ1bmN0aW9uKGEsIGIpIHtcblx0XHRcdHZhciBrZXksIGlkeCA9IDA7XG5cblx0XHRcdGZvcihrZXkgaW4gYSkge1xuXHRcdFx0XHRpZighYiB8fCBhW2tleV0gIT09IGJba2V5XSkgcmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRpZHgrKztcblx0XHRcdH1cblxuXHRcdFx0Zm9yKGtleSBpbiBiKSBpZHgtLTtcblxuXHRcdFx0cmV0dXJuIGlkeCA9PT0gMDtcblx0XHR9KGNvbnRlbnQubG9jYWxzLCBuZXdDb250ZW50LmxvY2FscykpO1xuXG5cdFx0aWYoIWxvY2FscykgdGhyb3cgbmV3IEVycm9yKCdBYm9ydGluZyBDU1MgSE1SIGR1ZSB0byBjaGFuZ2VkIGNzcy1tb2R1bGVzIGxvY2Fscy4nKTtcblxuXHRcdHVwZGF0ZShuZXdDb250ZW50KTtcblx0fSk7XG5cblx0bW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uKCkgeyB1cGRhdGUoKTsgfSk7XG59IiwiaW1wb3J0ICcuL3N0eWxlcy9tYWluLnNjc3MnO1xuaW1wb3J0ICcuL3N0eWxlcy9fdW5kZXItY29uc3RydWN0aW9uLnNjc3MnO1xuXG5kb2N1bWVudCA9IHJlcXVpcmUoJy4vaW5kZXgucHVnJyk7XG4iXSwic291cmNlUm9vdCI6IiJ9